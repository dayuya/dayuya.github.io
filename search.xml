<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>保存用户信息</title>
      <link href="/undefined.html"/>
      <url>/undefined.html</url>
      
        <content type="html"><![CDATA[<h1 id="3-ThreadLocal保存用户信息"><a href="#3-ThreadLocal保存用户信息" class="headerlink" title="3. ThreadLocal保存用户信息"></a>3. ThreadLocal保存用户信息</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.dao.pojo.SysUser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserThreadLocal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">UserThreadLocal</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;SysUser&gt; LOCAL = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(SysUser sysUser)</span>&#123;</span><br><span class="line">        LOCAL.set(sysUser);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SysUser <span class="title function_">get</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> LOCAL.get();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span>&#123;</span><br><span class="line">        LOCAL.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.dao.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.service.LoginService;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.utils.UserThreadLocal;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.vo.ErrorCode;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.vo.Result;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginService loginService;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//在执行controller方法(Handler)之前进行执行</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1. 需要判断 请求的接口路径 是否为 HandlerMethod (controller方法)</span></span><br><span class="line"><span class="comment">         * 2. 判断 token是否为空，如果为空 未登录</span></span><br><span class="line"><span class="comment">         * 3. 如果token 不为空，登录验证 loginService checkToken</span></span><br><span class="line"><span class="comment">         * 4. 如果认证成功 放行即可</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (!(handler <span class="keyword">instanceof</span> HandlerMethod))&#123;</span><br><span class="line">            <span class="comment">//handler 可能是 RequestResourceHandler springboot 程序 访问静态资源 默认去classpath下的static目录去查询</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;=================request start===========================&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">        log.info(<span class="string">&quot;request uri:&#123;&#125;&quot;</span>,requestURI);</span><br><span class="line">        log.info(<span class="string">&quot;request method:&#123;&#125;&quot;</span>,request.getMethod());</span><br><span class="line">        log.info(<span class="string">&quot;token:&#123;&#125;&quot;</span>, token);</span><br><span class="line">        log.info(<span class="string">&quot;=================request end===========================&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(token))&#123;</span><br><span class="line">            <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> Result.fail(ErrorCode.NO_LOGIN.getCode(), <span class="string">&quot;未登录&quot;</span>);</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">            response.getWriter().print(JSON.toJSONString(result));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> loginService.checkToken(token);</span><br><span class="line">        <span class="keyword">if</span> (sysUser == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> Result.fail(ErrorCode.NO_LOGIN.getCode(), <span class="string">&quot;未登录&quot;</span>);</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">            response.getWriter().print(JSON.toJSONString(result));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//登录验证成功，放行</span></span><br><span class="line">        <span class="comment">//我希望在controller中 直接获取用户的信息 怎么获取?</span></span><br><span class="line">        UserThreadLocal.put(sysUser);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        UserThreadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.dao.pojo.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.utils.UserThreadLocal;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.vo.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//        SysUser</span></span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> UserThreadLocal.get();</span><br><span class="line">        System.out.println(sysUser);</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用线程池</title>
      <link href="/42761.html"/>
      <url>/42761.html</url>
      
        <content type="html"><![CDATA[<h1 id="3-使用线程池-更新阅读次数"><a href="#3-使用线程池-更新阅读次数" class="headerlink" title="3. 使用线程池 更新阅读次数"></a>3. 使用线程池 更新阅读次数</h1><h2 id="3-1-线程池配置"><a href="#3-1-线程池配置" class="headerlink" title="3.1 线程池配置"></a>3.1 线程池配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadPoolConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;taskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Executor <span class="title function_">asyncServiceExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        <span class="comment">// 设置核心线程数</span></span><br><span class="line">        executor.setCorePoolSize(<span class="number">5</span>);</span><br><span class="line">        <span class="comment">// 设置最大线程数</span></span><br><span class="line">        executor.setMaxPoolSize(<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//配置队列大小</span></span><br><span class="line">        executor.setQueueCapacity(Integer.MAX_VALUE);</span><br><span class="line">        <span class="comment">// 设置线程活跃时间（秒）</span></span><br><span class="line">        executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">        <span class="comment">// 设置默认线程名称</span></span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">&quot;码神之路博客项目&quot;</span>);</span><br><span class="line">        <span class="comment">// 等待所有任务结束后再关闭线程池</span></span><br><span class="line">        executor.setWaitForTasksToCompleteOnShutdown(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//执行初始化</span></span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-1-使用"><a href="#3-1-使用" class="headerlink" title="3.1 使用"></a>3.1 使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.dao.mapper.ArticleMapper;</span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.dao.pojo.Article;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async(&quot;taskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateViewCount</span><span class="params">(ArticleMapper articleMapper,Article article)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Article</span> <span class="variable">articleUpdate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Article</span>();</span><br><span class="line">        articleUpdate.setViewCounts(article.getViewCounts() + <span class="number">1</span>);</span><br><span class="line">        LambdaQueryWrapper&lt;Article&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(Article::getId,article.getId());</span><br><span class="line">        queryWrapper.eq(Article::getViewCounts,article.getViewCounts());</span><br><span class="line">        articleMapper.update(articleUpdate,queryWrapper);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//睡眠5秒 证明不会影响主线程的使用</span></span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ThreadService threadService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ArticleVo <span class="title function_">findArticleById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleMapper.selectById(id);</span><br><span class="line">    threadService.updateViewCount(articleMapper,article);</span><br><span class="line">    <span class="keyword">return</span> copy(article,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3 测试"></a>3.3 测试</h2><p>睡眠 ThredService中的方法 5秒，不会影响主线程的使用，即文章详情会很快的显示出来，不受影响</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>登入拦截器</title>
      <link href="/25210.html"/>
      <url>/25210.html</url>
      
        <content type="html"><![CDATA[<h2 id="2-2-使拦截器生效"><a href="#2-2-使拦截器生效" class="headerlink" title="2.2 使拦截器生效"></a>2.2 使拦截器生效</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.handler.LoginInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMVCConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginInterceptor loginInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">//跨域配置</span></span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>).allowedOrigins(<span class="string">&quot;http://localhost:8080&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(loginInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-3-测试"><a href="#2-3-测试" class="headerlink" title="2.3 测试"></a>2.3 测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mszlu.blog.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mszlu.blog.vo.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker-win10-typecho安装</title>
      <link href="/23438.html"/>
      <url>/23438.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=typecho-blog --restart always -v D:/docker/http/typecho:/data -e PHP_TZ=Asia/Shanghai -e PHP_MAX_EXECUTION_TIME=600 -p 80:80 80x86/typecho:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-win10-mariadb安装</title>
      <link href="/34853.html"/>
      <url>/34853.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker  run  -d -p 3306:3306  -v /root/docker_data/mysql/data:/var/lib/mysql  -e MYSQL_ROOT_PASSWORD=<span class="string">&quot;123456&quot;</span> --name mysql  mariadb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>v2raya</title>
      <link href="/4214488808.html"/>
      <url>/4214488808.html</url>
      
        <content type="html"><![CDATA[<p>docker 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --privileged \</span><br><span class="line">  --network=host \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e V2RAYA_LOG_FILE=/tmp/v2raya.<span class="built_in">log</span> \</span><br><span class="line">  -v /lib/modules:/lib/modules:ro \</span><br><span class="line">  -v /etc/resolv.conf:/etc/resolv.conf \</span><br><span class="line">  -v /etc/v2raya:/etc/v2raya \</span><br><span class="line">  mzz2017/v2raya</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>home hass 安装</title>
      <link href="/3593310466.html"/>
      <url>/3593310466.html</url>
      
        <content type="html"><![CDATA[<p>docker</p><p>docker run -d –name&#x3D;”hass” –network host  -v &#x2F;root&#x2F;hass&#x2F;config:&#x2F;config -p 8123:8123 -p homeassistant&#x2F;home-assistant:latest</p><p><a href="https://blog.csdn.net/weixin_47198051/article/details/122988221?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168934294216800182772615%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168934294216800182772615&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-122988221-null-null.142%5Ev88%5Econtrol,239%5Ev2%5Einsert_chatgpt&utm_term=homeassistant%20docker&spm=1018.2226.3001.4187">参考</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>远程灯</title>
      <link href="/4182503455.html"/>
      <url>/4182503455.html</url>
      
        <content type="html"><![CDATA[<p>esp01+继电器带光耦<br>esp01s+继电器可以不带光耦</p><p>实现手动开关 接线 3v3+io2</p><p><img src="/images/pasted-43.png" alt="upload successful"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>usb 接线</title>
      <link href="/982546097.html"/>
      <url>/982546097.html</url>
      
        <content type="html"><![CDATA[<p><img src="/images/pasted-42.png" alt="upload successful"><br>vcc 接5v<br>gnd 接地</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在整个系统中查找文件</title>
      <link href="/3073229119.html"/>
      <url>/3073229119.html</url>
      
        <content type="html"><![CDATA[<p>在整个系统中查找名为 myfile.txt 的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name myfile.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> debian </tag>
            
            <tag> docker </tag>
            
            <tag> 青龙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis &#39;tagIds&#39; not found</title>
      <link href="/1893143235.html"/>
      <url>/1893143235.html</url>
      
        <content type="html"><![CDATA[<p> Parameter ‘tagIds’ not found. Available parameters are [arg0, collection, list]] with root cause</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Tag&gt; findTagsByTagIds(List&lt;Long&gt; tagIds);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- List&lt;Tag&gt; findTagsByTagIds(List&lt;Long&gt; tagIds); --&gt;</span><br><span class="line">&lt;select id=&quot;findTagsByTagIds&quot; parameterType=&quot;list&quot; resultType=&quot;com.dayu.blog.dao.pojo.Tag&quot;&gt;</span><br><span class="line">    select id,tag_name as tagName from ms_tag</span><br><span class="line">    where id in</span><br><span class="line">    &lt;foreach collection=&quot;tagIds&quot;  item=&quot;tagId&quot; separator=&quot;,&quot; open=&quot;(&quot; close=&quot;)&quot; &gt;</span><br><span class="line">        #&#123;tagId&#125;</span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line"></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>解决方法<br>添加注解 @Param</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Tag&gt; findTagsByTagIds(@Param(&quot;tagIds&quot;) List&lt;Long&gt; tagIds);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog 维护指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 维护指南</title>
      <link href="/3071813765.html"/>
      <url>/3071813765.html</url>
      
        <content type="html"><![CDATA[<p>docker: Error response from daemon: Get <a href="https://registry-1.docker.io/v2/">https://registry-1.docker.io/v2/</a>: net&#x2F;http: request canceled</p><p>编辑或新建配置文件 &#x2F;etc&#x2F;docker&#x2F;daemon.json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;,&quot;http://hub-mirror.c.163.com&quot;],</span><br><span class="line">    &quot;live-restore&quot;: true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>chatgpt</title>
      <link href="/3059055729.html"/>
      <url>/3059055729.html</url>
      
        <content type="html"><![CDATA[<p>提问</p><p><img src="/images/pasted-37.png" alt="你问我答"></p><p>现在我们来玩个你问我答的游戏<br>谜底是为了测试我在sql方面的专业水平<br>你负责提问，我负责回答<br>你要根据我的答案进行反馈、评价、补充<br>如果我说不知道，你就直接输出正确答案，然后你接续提问</p><p><img src="/images/pasted-38.png" alt="你问我答"></p><p><img src="/images/pasted-40.png" alt="upload successful"></p><p><img src="/images/pasted-41.png" alt="upload successful"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>day01</title>
      <link href="/4239578080.html"/>
      <url>/4239578080.html</url>
      
        <content type="html"><![CDATA[<h1 id="Day01作业"><a href="#Day01作业" class="headerlink" title="Day01作业"></a>Day01作业</h1><h3 id="1-简答题"><a href="#1-简答题" class="headerlink" title="1. 简答题"></a>1. 简答题</h3><h5 id="1-1-为什么要在计算机中配置环境变量？请列出操作步骤？"><a href="#1-1-为什么要在计算机中配置环境变量？请列出操作步骤？" class="headerlink" title="1.1 为什么要在计算机中配置环境变量？请列出操作步骤？"></a>1.1 为什么要在计算机中配置环境变量？请列出操作步骤？</h5><p>​答：</p><hr><h5 id="1-2-请用自己的理解，表述关键字的是什么？使用生活中的例子也行。"><a href="#1-2-请用自己的理解，表述关键字的是什么？使用生活中的例子也行。" class="headerlink" title="1.2 请用自己的理解，表述关键字的是什么？使用生活中的例子也行。"></a>1.2 请用自己的理解，表述关键字的是什么？使用生活中的例子也行。</h5><p>​答：</p><hr><h5 id="1-3-请列出Java中字面量的分类？"><a href="#1-3-请列出Java中字面量的分类？" class="headerlink" title="1.3 请列出Java中字面量的分类？"></a>1.3 请列出Java中字面量的分类？</h5><p>​答：</p><hr><h5 id="1-4-请阐述你对变量的理解？以及变量的好处？"><a href="#1-4-请阐述你对变量的理解？以及变量的好处？" class="headerlink" title="1.4 请阐述你对变量的理解？以及变量的好处？"></a>1.4 请阐述你对变量的理解？以及变量的好处？</h5><p>​答：</p><hr><h3 id="2-选择题"><a href="#2-选择题" class="headerlink" title="2. 选择题"></a>2. 选择题</h3><h5 id="2-1-单选-：-下面有关Java语言跨平台性说法正确的是"><a href="#2-1-单选-：-下面有关Java语言跨平台性说法正确的是" class="headerlink" title="2.1 (单选)： 下面有关Java语言跨平台性说法正确的是(  )"></a>2.1 (单选)： 下面有关Java语言跨平台性说法正确的是(  )</h5><p>​A.Java的源代码可以在所有平台上运行。 </p><p>​B.JDK是跨平台的。 </p><p>​C.JVM是跨平台的。</p><p>​D.跨平台中的平台指的是操作系统,Java语言的跨平台性是指Java程序可以在不同的操作系统上运行,前提是相应的操作系统安装了对应的JVM。 </p><hr><h5 id="2-2-单选-：-以下选项中-关于常量说法正确的是"><a href="#2-2-单选-：-以下选项中-关于常量说法正确的是" class="headerlink" title="2.2 (单选)： 以下选项中,关于常量说法正确的是(  )"></a>2.2 (单选)： 以下选项中,关于常量说法正确的是(  )</h5><p>A</p><p>​‘ ’(里面是一个空格),这是一个字符常量。<br>     “ ”(里面是一个空格),这是一个字符串常量。 </p><p>B</p><p>​‘’(里面没有空格),这是一个字符常量。<br>​ “”(里面没有空格),这是一个字符串常量。 </p><p>C</p><p>​‘ab’,这是一个字符常量。<br>     “ab”,这是一个字符串常量。</p><p>D</p><p>​1,2,3,3.0这4个都是整数常量。<br>​1.0,2.1,3.1这3个都是小数常量。</p><hr><h5 id="2-3-单选-：-下列选项中关于Java中的注释描述错误的是"><a href="#2-3-单选-：-下列选项中关于Java中的注释描述错误的是" class="headerlink" title="2.3 (单选)： 下列选项中关于Java中的注释描述错误的是(  )"></a>2.3 (单选)： 下列选项中关于Java中的注释描述错误的是(  )</h5><p>​A.单行注释的格式是,例子如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//被注释的内容</span></span><br></pre></td></tr></table></figure><p>​B.多行注释可以嵌套多行注释,例子如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*hello/*java*/</span>world*/</span><br></pre></td></tr></table></figure><p>​C.单行注释可以嵌套单行注释,例子如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hello//world//java</span></span><br></pre></td></tr></table></figure><p>​D.多行注释的格式,例子如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*被注释的内容*/</span></span><br></pre></td></tr></table></figure><hr><h5 id="2-4-单选-：请观察以下代码-选取正确答案"><a href="#2-4-单选-：请观察以下代码-选取正确答案" class="headerlink" title="2.4  (单选)：请观察以下代码,选取正确答案(  )"></a>2.4  (单选)：请观察以下代码,选取正确答案(  )</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    System.out.println(a);</span><br><span class="line">    &#123;</span><br><span class="line">     a = <span class="number">20</span>; </span><br><span class="line">        System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">     System.out.println(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A. <span class="number">10</span> <span class="number">20</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B. <span class="number">10</span> <span class="number">10</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C. <span class="number">10</span> <span class="number">20</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D. 编译报错，第<span class="number">8</span>行无法使用到变量a</span><br></pre></td></tr></table></figure><hr><h5 id="2-5-单选-：-有一个HelloWorld-java文件代码如下-下列说法正确的是"><a href="#2-5-单选-：-有一个HelloWorld-java文件代码如下-下列说法正确的是" class="headerlink" title="2.5 (单选)： 有一个HelloWorld.java文件代码如下,下列说法正确的是(  )"></a>2.5 (单选)： 有一个HelloWorld.java文件代码如下,下列说法正确的是(  )</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​A.Java源代码不用编译,可以直接运行。</p><p>​B.编译使用命令javac HelloWorld.java</p><p>​C.运行使用命令 java HelloWorld.class</p><p>​D.Java虚拟机真正执行的是.java文件。</p><hr><h5 id="2-6-单选-：-HelloWorld-java文件代码如下-使用javac-HelloWorld-java编译时报错-下面说法错误的是"><a href="#2-6-单选-：-HelloWorld-java文件代码如下-使用javac-HelloWorld-java编译时报错-下面说法错误的是" class="headerlink" title="2.6 (单选)： HelloWorld.java文件代码如下,使用javac HelloWorld.java编译时报错,下面说法错误的是(  )"></a>2.6 (单选)： HelloWorld.java文件代码如下,使用javac HelloWorld.java编译时报错,下面说法错误的是(  )</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;                    <span class="comment">//第1行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> viod <span class="title function_">main</span><span class="params">(String[] args)</span> &#123; <span class="comment">//第2行</span></span><br><span class="line">        system.out.println(helloworld);      <span class="comment">//第3行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​A.第1行有错误,HelloWorld应该都小写,写成public class helloworld { </p><p>​B.第2行有错误,viod应写成void. </p><p>​C.第3行有错误,system应该是System. </p><p>​D.第3行有错误,helloworld应该用””引起来. </p><hr><h5 id="2-7-单选-：-关于JDK、JRE、JVM下列哪些选项的描述是错误的"><a href="#2-7-单选-：-关于JDK、JRE、JVM下列哪些选项的描述是错误的" class="headerlink" title="2.7 (单选)： 关于JDK、JRE、JVM下列哪些选项的描述是错误的(  )"></a>2.7 (单选)： 关于JDK、JRE、JVM下列哪些选项的描述是错误的(  )</h5><p>​A.JRE全称Java Runtime Environment是Java的运行环境。 </p><p>​B.JDK全称Java Development Kit是Java的开发工具包。  </p><p>​C.JVM全称Java Virtual Machine是Java程序运行的载体,可以安装在不同的操作系统上,来运行Java程序。 </p><p>​D.一台计算机要能够执行java程序,必须同时安装JDK、JRE、JVM。 </p><hr><h5 id="2-8-单选-：-关于Java环境变量的配置说法错误的是"><a href="#2-8-单选-：-关于Java环境变量的配置说法错误的是" class="headerlink" title="2.8 (单选)： 关于Java环境变量的配置说法错误的是(  )"></a>2.8 (单选)： 关于Java环境变量的配置说法错误的是(  )</h5><p>​A.JAVA_HOME环境变量是Windows系统规定要配置的,不然Windows运行会不正常。</p><p>​B.JAVA_HOME写的应该是JDK安装的目录。 </p><p>​C.安装了JDK后,通常会配置JAVA_HOME环境变量,它的作用是让操作系统上的程序能够知道JDK安装的目录。 </p><p>​D.配置了JAVA_HOME后,需要把%JAVA_HOME%\bin配置到path路径下,并用”分号”和其他配置隔开。 </p><hr><h3 id="3-代码题"><a href="#3-代码题" class="headerlink" title="3 代码题"></a>3 代码题</h3><h4 id="3-1-请编写程序-将如下语句输出到屏幕上"><a href="#3-1-请编写程序-将如下语句输出到屏幕上" class="headerlink" title="3.1 请编写程序,将如下语句输出到屏幕上:"></a>3.1 请编写程序,将如下语句输出到屏幕上:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java是一门跨平台的计算机语言,被称为一次编写,处处运行。</span><br></pre></td></tr></table></figure><h5 id="3-1-1-思路分析："><a href="#3-1-1-思路分析：" class="headerlink" title="3.1.1 思路分析："></a>3.1.1 思路分析：</h5><p>​1.创建java文件。</p><p>​2.编写类,用于完成该程序。</p><p>​3.程序的运行需要主方法,编写主方法。</p><p>​4.该使用什么语句将题目中的文本输出?</p><p>​5.该怎样编译和运行java文件?</p><h5 id="3-1-2-参考步骤："><a href="#3-1-2-参考步骤：" class="headerlink" title="3.1.2 参考步骤："></a>3.1.2 参考步骤：</h5><p>​1.新建文本文件,将名称修改为Test01.java。注意显示文件的后缀名,防止出现Test01.java.txt的文件名。</p><p>​2.打开文件,编写代码,先定义一个类Test01,类名需要与文件名一致。注意大小写。</p><p>​3.在类中定义主方法,在主方法中编写输出语句,将题目中的文本用双引号包裹。</p><p>​4.保存文件内容。打开cmd窗口,将命令目录切换至文件所在目录。使用javac命令编译java文件,使用java命令运行class文件,查看结果。注意:编译java文件,需要带后缀名;运行class文件,不需后缀名。</p><h5 id="3-1-3-答案："><a href="#3-1-3-答案：" class="headerlink" title="3.1.3 答案："></a>3.1.3 答案：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(在此处写答案即可)</span><br></pre></td></tr></table></figure><hr><h4 id="3-2-常量是指在程序运行过程中-其值不可以发生改变的量-请编写Java程序-分别将下列常量数据打印到屏幕上。"><a href="#3-2-常量是指在程序运行过程中-其值不可以发生改变的量-请编写Java程序-分别将下列常量数据打印到屏幕上。" class="headerlink" title="3.2 常量是指在程序运行过程中,其值不可以发生改变的量,请编写Java程序,分别将下列常量数据打印到屏幕上。"></a>3.2 常量是指在程序运行过程中,其值不可以发生改变的量,请编写Java程序,分别将下列常量数据打印到屏幕上。</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">字符串常量:用双引号括起来的内容。<span class="string">&quot;HelloWorld&quot;</span>,<span class="string">&quot;黑马程序员&quot;</span> </span><br><span class="line">整数常量:不带小数的数字。<span class="number">666</span>, -<span class="number">88</span> </span><br><span class="line">小数常量:带小数的数字。<span class="number">13.14</span>, -<span class="number">5.21</span> </span><br><span class="line">字符常量:用单引号括起来的内容。<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;我&#x27;</span> </span><br><span class="line">布尔常量:布尔值,表示真假。只有两个值：<span class="literal">true</span>,<span class="literal">false</span> </span><br><span class="line">空常量:一个特殊的值,空值,<span class="literal">null</span>(<span class="literal">null</span>值可以直接在输出语句打印吗)</span><br></pre></td></tr></table></figure><h5 id="3-2-1-思路分析："><a href="#3-2-1-思路分析：" class="headerlink" title="3.2.1 思路分析："></a>3.2.1 思路分析：</h5><p>​1.创建java文件。</p><p>​2.编写类,用于完成该程序。</p><p>​3.程序的运行需要主方法,编写主方法。</p><p>​4.该使用什么语句将题目中的常量输出?</p><p>​5.程序编写完成,该怎样编译和运行java文件?</p><h5 id="3-2-2-参考步骤："><a href="#3-2-2-参考步骤：" class="headerlink" title="3.2.2 参考步骤："></a>3.2.2 参考步骤：</h5><p>​1.新建文本文件,将名称修改为ConstantDemo.java。</p><p>​2.打开文件,编写代码,先定义一个类ConstantDemo,类名需要与文件名一致。注意大小写。</p><p>​3.在类中定义主方法,在主方法中编写多个输出语句,在输出语句中直接输出常量即可。</p><p>​4.保存文件内容。打开cmd窗口,将命令目录切换至文件所在目录。使用javac命令编译java文件,使用java命令运行class文件,查看结果。注意:编译java文件,需要带后缀名;运行class文件,不需后缀名。</p><h5 id="3-2-3-答案："><a href="#3-2-3-答案：" class="headerlink" title="3.2.3 答案："></a>3.2.3 答案：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(在此处写答案即可)</span><br></pre></td></tr></table></figure><hr><h4 id="3-3-有一个商品的信息如下图："><a href="#3-3-有一个商品的信息如下图：" class="headerlink" title="3.3 有一个商品的信息如下图："></a>3.3 有一个商品的信息如下图：</h4><p><img src="/img/1.png"></p><p>a. 请定义一个合适的变量存储它的价格，然后通过输出语句将商品的价格打印出来</p><p>b. 因为公司四季度财报不及预期，准备对该商品进行优惠处理，在原价格的基础上打7折，请再次通过输出语句打印变量，但是这次显示的是打7折后的价格 </p><p>c. 由于7折处理，销量猛增加，业绩有所好转，准备再次调价，在7折后的基础上 + 1000，然后再次通过输出语句输出变量的值</p>]]></content>
      
      
      <categories>
          
          <category> 传智实训作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>消息推送</title>
      <link href="/3100918948.html"/>
      <url>/3100918948.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://jucore.notion.site/e48820d7a5174c19bc28bf56df6ae5c7">https://jucore.notion.site/e48820d7a5174c19bc28bf56df6ae5c7</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 搭建qq机器人</title>
      <link href="/1082586999.html"/>
      <url>/1082586999.html</url>
      
        <content type="html"><![CDATA[<p>这里使用 uname -a 查看系统架构</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="创建文件夹并进入"><a href="#创建文件夹并进入" class="headerlink" title="创建文件夹并进入"></a>创建文件夹并进入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> go-cqhttp &amp;&amp; <span class="built_in">cd</span> go-cqhttp  </span><br></pre></td></tr></table></figure><h3 id="go-cqhttp官方地址"><a href="#go-cqhttp官方地址" class="headerlink" title="go-cqhttp官方地址"></a>go-cqhttp官方地址</h3><pre><code> https://github.com/Mrs4s/go-cqhttp/releases</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/Mrs4s/go-cqhttp/releases/download/v1.0.0-rc5/go-cqhttp_linux_amd64.tar.gz   # 官网有新版本 自取哦 改版号与系统版本</span><br></pre></td></tr></table></figure><h3 id="解压-go-cqhttp"><a href="#解压-go-cqhttp" class="headerlink" title="解压 go-cqhttp"></a>解压 go-cqhttp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf go-cqhttp_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="启动-go-cqhttp"><a href="#启动-go-cqhttp" class="headerlink" title="启动 go-cqhttp"></a>启动 go-cqhttp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./go-cqhttp <span class="comment">#第一次会自动生成一些文件 运行有提示哦</span></span><br></pre></td></tr></table></figure><h3 id="后台启动-go-cqhttp"><a href="#后台启动-go-cqhttp" class="headerlink" title="后台启动 go-cqhttp"></a>后台启动 go-cqhttp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./go-cqhttp &amp;</span><br></pre></td></tr></table></figure><p>会生成一个out的日志文件<br><img src="/images/pasted-30.png" alt="upload successful"></p><h2 id="ps-其他"><a href="#ps-其他" class="headerlink" title="ps:其他"></a>ps:其他</h2><h3 id="1-wget下载太慢了"><a href="#1-wget下载太慢了" class="headerlink" title="1.wget下载太慢了"></a>1.wget下载太慢了</h3><pre><code>其实只要这个文件运行就好了，你可以直接从github 下载</code></pre><p><img src="/images/pasted-31.png" alt="upload successful"></p><h3 id="2-登不上"><a href="#2-登不上" class="headerlink" title="2.登不上"></a>2.登不上</h3><pre><code>改成watch协议 在device.json 中修改 &quot;protocol&quot;:2 </code></pre><p>    </p><h3 id="3-config-yml-配置文件"><a href="#3-config-yml-配置文件" class="headerlink" title="3.config.yml 配置文件"></a>3.config.yml 配置文件</h3>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># go-cqhttp 默认配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">account:</span> <span class="comment"># 账号相关</span></span><br><span class="line">  <span class="attr">uin:</span> <span class="number">3304582965</span> <span class="comment"># QQ账号</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># 密码为空时使用扫码登录</span></span><br><span class="line">  <span class="attr">encrypt:</span> <span class="literal">false</span>  <span class="comment"># 是否开启密码加密</span></span><br><span class="line">  <span class="attr">status:</span> <span class="number">0</span>      <span class="comment"># 在线状态 请参考 https://docs.go-cqhttp.org/guide/config.html#在线状态</span></span><br><span class="line">  <span class="attr">relogin:</span> <span class="comment"># 重连设置</span></span><br><span class="line">    <span class="attr">delay:</span> <span class="number">3</span>   <span class="comment"># 首次重连延迟, 单位秒</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">3</span>   <span class="comment"># 重连间隔</span></span><br><span class="line">    <span class="attr">max-times:</span> <span class="number">0</span>  <span class="comment"># 最大重连次数, 0为无限制</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 是否使用服务器下发的新地址进行重连</span></span><br><span class="line">  <span class="comment"># 注意, 此设置可能导致在海外服务器上连接情况更差</span></span><br><span class="line">  <span class="attr">use-sso-address:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否允许发送临时会话消息</span></span><br><span class="line">  <span class="attr">allow-temp-session:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">heartbeat:</span></span><br><span class="line">  <span class="comment"># 心跳频率, 单位秒</span></span><br><span class="line">  <span class="comment"># -1 为关闭心跳</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="attr">message:</span></span><br><span class="line">  <span class="comment"># 上报数据类型</span></span><br><span class="line">  <span class="comment"># 可选: string,array</span></span><br><span class="line">  <span class="attr">post-format:</span> <span class="string">string</span></span><br><span class="line">  <span class="comment"># 是否忽略无效的CQ码, 如果为假将原样发送</span></span><br><span class="line">  <span class="attr">ignore-invalid-cqcode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否强制分片发送消息</span></span><br><span class="line">  <span class="comment"># 分片发送将会带来更快的速度</span></span><br><span class="line">  <span class="comment"># 但是兼容性会有些问题</span></span><br><span class="line">  <span class="attr">force-fragment:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否将url分片发送</span></span><br><span class="line">  <span class="attr">fix-url:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 下载图片等请求网络代理</span></span><br><span class="line">  <span class="attr">proxy-rewrite:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># 是否上报自身消息</span></span><br><span class="line">  <span class="attr">report-self-message:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 移除服务端的Reply附带的At</span></span><br><span class="line">  <span class="attr">remove-reply-at:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 为Reply附加更多信息</span></span><br><span class="line">  <span class="attr">extra-reply-data:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 跳过 Mime 扫描, 忽略错误数据</span></span><br><span class="line">  <span class="attr">skip-mime-scan:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否自动转换 WebP 图片</span></span><br><span class="line">  <span class="attr">convert-webp-image:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output:</span></span><br><span class="line">  <span class="comment"># 日志等级 trace,debug,info,warn,error</span></span><br><span class="line">  <span class="attr">log-level:</span> <span class="string">warn</span></span><br><span class="line">  <span class="comment"># 日志时效 单位天. 超过这个时间之前的日志将会被自动删除. 设置为 0 表示永久保留.</span></span><br><span class="line">  <span class="attr">log-aging:</span> <span class="number">15</span></span><br><span class="line">  <span class="comment"># 是否在每次启动时强制创建全新的文件储存日志. 为 false 的情况下将会在上次启动时创建的日志文件续写</span></span><br><span class="line">  <span class="attr">log-force-new:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否启用日志颜色</span></span><br><span class="line">  <span class="attr">log-colorful:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否启用 DEBUG</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 开启调试模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认中间件锚点</span></span><br><span class="line"><span class="attr">default-middlewares:</span> <span class="meta">&amp;default</span></span><br><span class="line">  <span class="comment"># 访问密钥, 强烈推荐在公网的服务器设置</span></span><br><span class="line">  <span class="attr">access-token:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># 事件过滤器文件目录</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># API限速设置</span></span><br><span class="line">  <span class="comment"># 该设置为全局生效</span></span><br><span class="line">  <span class="comment"># 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配</span></span><br><span class="line">  <span class="comment"># 目前该限速设置为令牌桶算法, 请参考:</span></span><br><span class="line">  <span class="comment"># https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin</span></span><br><span class="line">  <span class="attr">rate-limit:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span> <span class="comment"># 是否启用限速</span></span><br><span class="line">    <span class="attr">frequency:</span> <span class="number">1</span>  <span class="comment"># 令牌回复频率, 单位秒</span></span><br><span class="line">    <span class="attr">bucket:</span> <span class="number">1</span>     <span class="comment"># 令牌桶大小</span></span><br><span class="line"></span><br><span class="line"><span class="attr">database:</span> <span class="comment"># 数据库相关设置</span></span><br><span class="line">  <span class="attr">leveldb:</span></span><br><span class="line">    <span class="comment"># 是否启用内置leveldb数据库</span></span><br><span class="line">    <span class="comment"># 启用将会增加10-20MB的内存占用和一定的磁盘空间</span></span><br><span class="line">    <span class="comment"># 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sqlite3:</span></span><br><span class="line">    <span class="comment"># 是否启用内置sqlite3数据库</span></span><br><span class="line">    <span class="comment"># 启用将会增加一定的内存占用和一定的磁盘空间</span></span><br><span class="line">    <span class="comment"># 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">cachettl:</span> <span class="number">3600000000000</span> <span class="comment"># 1h</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务列表</span></span><br><span class="line"><span class="attr">servers:</span></span><br><span class="line">  <span class="comment"># 添加方式，同一连接方式可添加多个，具体配置说明请查看文档</span></span><br><span class="line">  <span class="comment">#- http: # http 通信</span></span><br><span class="line">  <span class="comment">#- ws:   # 正向 Websocket</span></span><br><span class="line">  <span class="comment">#- ws-reverse: # 反向 Websocket</span></span><br><span class="line">  <span class="comment">#- pprof: #性能分析服务器</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span> <span class="comment"># HTTP 通信设置</span></span><br><span class="line">      <span class="attr">address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:5701</span> <span class="comment"># HTTP监听地址</span></span><br><span class="line">      <span class="attr">version:</span> <span class="number">11</span>     <span class="comment"># OneBot协议版本, 支持 11/12</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="number">5</span>      <span class="comment"># 反向 HTTP 超时时间, 单位秒，&lt;5 时将被忽略</span></span><br><span class="line">      <span class="attr">long-polling:</span>   <span class="comment"># 长轮询拓展</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">false</span>       <span class="comment"># 是否开启</span></span><br><span class="line">        <span class="attr">max-queue-size:</span> <span class="number">2000</span> <span class="comment"># 消息队列大小，0 表示不限制队列大小，谨慎使用</span></span><br><span class="line">      <span class="attr">middlewares:</span></span><br><span class="line">        <span class="string">&lt;&lt;:</span> <span class="string">*default</span> <span class="comment"># 引用默认中间件</span></span><br><span class="line">      <span class="attr">post:</span>           <span class="comment"># 反向HTTP POST地址列表</span></span><br><span class="line">      <span class="comment">#- url: &#x27;&#x27;                # 地址</span></span><br><span class="line">      <span class="comment">#  secret: &#x27;&#x27;             # 密钥</span></span><br><span class="line">      <span class="comment">#  max-retries: 3         # 最大重试，0 时禁用</span></span><br><span class="line">      <span class="comment">#  retries-interval: 1500 # 重试时间，单位毫秒，0 时立即</span></span><br><span class="line">      <span class="comment">#- url: http://127.0.0.1:5701/ # 地址</span></span><br><span class="line">      <span class="comment">#  secret: &#x27;&#x27;                  # 密钥</span></span><br><span class="line">      <span class="comment">#  max-retries: 10             # 最大重试，0 时禁用</span></span><br><span class="line">      <span class="comment">#  retries-interval: 1000      # 重试时间，单位毫秒，0 时立即</span></span><br><span class="line">  <span class="comment"># 反向WS设置</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">ws-reverse:</span></span><br><span class="line">      <span class="comment"># 反向WS Universal 地址</span></span><br><span class="line">      <span class="comment"># 注意 设置了此项地址后下面两项将会被忽略</span></span><br><span class="line">      <span class="attr">universal:</span> <span class="string">ws://127.0.0.1:8080/qq/receive</span></span><br><span class="line">      <span class="comment"># 反向WS API 地址</span></span><br><span class="line">      <span class="attr">api:</span> <span class="string">ws://your_websocket_api.server</span></span><br><span class="line">      <span class="comment"># 反向WS Event 地址</span></span><br><span class="line">      <span class="attr">event:</span> <span class="string">ws://your_websocket_event.server</span></span><br><span class="line">      <span class="comment"># 重连间隔 单位毫秒</span></span><br><span class="line">      <span class="attr">reconnect-interval:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">middlewares:</span></span><br><span class="line">        <span class="string">&lt;&lt;:</span> <span class="string">*default</span> <span class="comment"># 引用默认中间件</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># nohup ./go-cqhttp &amp;  持久化命令</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>随身wifi 接线</title>
      <link href="/354767018.html"/>
      <url>/354767018.html</url>
      
        <content type="html"><![CDATA[<p>103s<br><img src="/images/pasted-29.png" alt="upload successful"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在 Docker 中运行 Mongodb</title>
      <link href="/3780234718.html"/>
      <url>/3780234718.html</url>
      
        <content type="html"><![CDATA[<p>sudo docker pull mongo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 27017:27017 --name mongodb -d mongo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>diy 手表</title>
      <link href="/968324232.html"/>
      <url>/968324232.html</url>
      
        <content type="html"><![CDATA[<p>github 开源链接：<a href="https://github.com/Forairaaaaa/Chappie-II">https://github.com/Forairaaaaa/Chappie-II</a></p><p><img src="/images/pasted-13.png" alt="upload successful"></p>]]></content>
      
      
      
        <tags>
            
            <tag> esp32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian 黑曜石</title>
      <link href="/1631208811.html"/>
      <url>/1631208811.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间管理大师</title>
      <link href="/4275632396.html"/>
      <url>/4275632396.html</url>
      
        <content type="html"><![CDATA[<p>人际关系</p><p>日程管理</p><p>知识学习</p><p>    周学习时间：2~4 小时<br>    方向：读书、长视频、论文    </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>日历软件平替</title>
      <link href="/4141962399.html"/>
      <url>/4141962399.html</url>
      
        <content type="html"><![CDATA[<p><img src="/%5Cimages%5Cpasted-12.png" alt="upload successful"></p><p>有苹果自带的日历没必要折腾</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日历软件 </tag>
            
            <tag> 日历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea 实用小技巧</title>
      <link href="/1135954253.html"/>
      <url>/1135954253.html</url>
      
        <content type="html"><![CDATA[<h3 id="快速建立for循坏"><a href="#快速建立for循坏" class="headerlink" title="快速建立for循坏"></a>快速建立for循坏</h3><p>    3.fori 直接建立一个3次for循坏</p><p><img src="/%5Cimages%5Cpasted-10.png" alt="upload successful"></p><h3 id="ctrl-d-向下复制一行"><a href="#ctrl-d-向下复制一行" class="headerlink" title="ctrl+d 向下复制一行"></a>ctrl+d 向下复制一行</h3><p>ctrl+d 向下复制一行</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub 搭建onedrive</title>
      <link href="/1863686818.html"/>
      <url>/1863686818.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.qqmate.cn/2237.html">https://www.qqmate.cn/2237.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>字符串概述</title>
      <link href="/3119971640.html"/>
      <url>/3119971640.html</url>
      
        <content type="html"><![CDATA[<p>字符串拼接 只要有中文就会拼接在以前</p><p>例如 “123”+”我是字符串”&#x3D;”123我是字符串” &#x2F;&#x2F;这里产生一个新的字符串(新地址)</p><p>离谱的操作</p><p><img src="/images/pasted-9.png" alt="upload successful"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">equals方法(要比较的字符串) 完全一样结果才是true，否则为false</span><br><span class="line">equalslgnoreCase(要比较的字符串) 完全一样结果才是true，否则为false 忽略大小写的比较 (常用：验证码比较)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>file</title>
      <link href="/2359244304.html"/>
      <url>/2359244304.html</url>
      
        <content type="html"><![CDATA[<p><img src="/images/pasted-8.png" alt="upload successful"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>青龙安装依赖或依赖缺失</title>
      <link href="/812602553.html"/>
      <url>/812602553.html</url>
      
        <content type="html"><![CDATA[<p>docker exec -it ql bash #ql为容器名根据自己容器修改<br>    <br>pip install moudle<br>缺什么就安装什么</p><p>一键安装脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL          https://ghproxy.com/https://raw.githubusercontent.com/FlechazoPh/QLDependency/main/Shell/QLOneKeyDependency.sh | sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1.NodeJs下</span><br><span class="line">NodeJs里面所需依赖 添加依赖—&gt;选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">ts-md5</span><br><span class="line">@types/node</span><br><span class="line">prettytable</span><br><span class="line">node-telegram-bot-api</span><br><span class="line">tslib</span><br><span class="line">ql</span><br><span class="line">common</span><br><span class="line">fs</span><br><span class="line">typescript</span><br><span class="line">axios</span><br><span class="line">png-js</span><br><span class="line">axios</span><br><span class="line">ws@7.4.3</span><br><span class="line">crypto-js</span><br><span class="line">jieba</span><br><span class="line">global-agent</span><br><span class="line">jsdom -g</span><br><span class="line">moment</span><br><span class="line">form-data</span><br><span class="line">date-fns</span><br><span class="line">node-jsencrypt</span><br><span class="line">require</span><br><span class="line">js-base64</span><br><span class="line">tough-cookie</span><br><span class="line">json5</span><br><span class="line">jsdom</span><br><span class="line">dotenv</span><br><span class="line">qs</span><br><span class="line"></span><br><span class="line">2.Python3下</span><br><span class="line">Python3依赖 添加依赖—&gt;选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">ping3</span><br><span class="line">canvas</span><br><span class="line">requests</span><br><span class="line">jieba</span><br><span class="line">PyExecJS</span><br><span class="line">httpx</span><br><span class="line"></span><br><span class="line">3.Linux下</span><br><span class="line">Linux依赖 添加依赖—&gt;选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">lxml</span><br><span class="line">bizMsg</span><br><span class="line">bizCode</span><br><span class="line">gcc</span><br><span class="line">python-devel</span><br><span class="line">aiohttp</span><br><span class="line">magic</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 青龙维护指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙 </tag>
            
            <tag> ql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux如何查看进程、杀死进程、启动进程等常用命令</title>
      <link href="/4004928447.html"/>
      <url>/4004928447.html</url>
      
        <content type="html"><![CDATA[<p>关键字: linux 查进程、杀进程、起进程<br>1.查进程<br>    ps命令查找与进程相关的PID号：<br>    ps a 显示现行终端机下的所有程序，包括其他用户的程序。<br>    ps -A 显示所有程序。<br>    ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。<br>    ps -e 此参数的效果和指定”A”参数相同。<br>    ps e 列出程序时，显示每个程序所使用的环境变量。<br>    ps f 用ASCII字符显示树状结构，表达程序间的相互关系。<br>    ps -H 显示树状结构，表示程序间的相互关系。<br>    ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。<br>    ps s 采用程序信号的格式显示程序状况。<br>    ps S 列出程序时，包括已中断的子程序资料。<br>    ps -t&lt;终端机编号&gt; 指定终端机编号，并列出属于该终端机的程序的状况。<br>    ps u 以用户为主的格式来显示程序状况。<br>    ps x 显示所有程序，不以终端机来区分。</p><pre><code>最常用的方法是ps aux,然后再通过管道使用grep命令过滤查找特定的进程,然后再对特定的进程进行操作。ps aux | grep program_filter_word,ps -ef |grep tomcat</code></pre><p>ps -ef|grep java|grep -v grep 显示出所有的java进程，去处掉当前的grep进程。</p><p>2.杀进程<br>   使用kill命令结束进程：kill xxx<br>   常用：kill －9 324<br>   Linux下还提供了一个killall命令，可以直接使用进程的名字而不是进程标识号，例如：# killall -9 NAME</p><p>3.进入到进程的执行文件所在的路径下，执行文件 .&#x2F;文件名</p><p>附：</p><p>这是本人花了两天时间整理得来的，一些最常用的地球人都知道的命令就省去啦！最后提供pdf手册下载</p><ol><li>更改档案拥有者<br>命令 : chown [-cfhvR] [–help] [–version] user[:group] file…<br>功能 : 更改文件或者文件夹的拥有者<br>参数格式 :<br>　　    user : 新的档案拥有者的使用者 IDgroup : 新的档案拥有者的使用者群体(group)<br>　　       -c : 若该档案拥有者确实已经更改，才显示其更改动作</li></ol><p>　　       -f : 若该档案拥有者无法被更改也不要显示错误讯息<br>　　       -h : 只对于连结(link)进行变更，而非该 link 真正指向的档案<br>　　       -v : 显示拥有者变更的详细资料<br>　       　-R : 对目前目录下的所有档案与子目录进行相同的拥有者变更(即以递回的方式逐个变更)</p><p>例如：chown -R oracle:oinstall &#x2F;oracle&#x2F;u01&#x2F;app&#x2F;oracle<br>      更改目录拥有者为oracle</p><ol start="2"><li>修改权限<br> 命令：chmod (change mode)<br> 功能：改变文件的读写和执行权限。有符号法和八进制数字法。<br> 选项：(1)符号法：<br>  命令格式：chmod {u|g|o|a}{+|-|&#x3D;}{r|w|x} filename<br>   u (user)   表示用户本人。<br>   g (group)  表示同组用户。<br>   o (oher)   表示其他用户。<br>   a (all)    表示所有用户。<br>   +          用于给予指定用户的许可权限。<br>   -          用于取消指定用户的许可权限。<br>   &#x3D;          将所许可的权限赋给文件。<br>   r (read)   读许可，表示可以拷贝该文件或目录的内容。<br>   w (write)  写许可，表示可以修改该文件或目录的内容。<br>   x (execute)执行许可，表示可以执行该文件或进入目录。<br><br>   (2)八进制数字法：</li></ol><p>  命令格式：chmod abc file<br>  其中a,b,c各为一个八进制数字，分别表示User、Group、及Other的权限。<br>          4 (100)    表示可读。<br>          2 (010)    表示可写。<br>          1 (001)    表示可执行。<br>  若要rwx属性则4+2+1&#x3D;7；<br>  若要rw-属性则4+2&#x3D;6；<br>  若要r-x属性则4+1&#x3D;5。</p><pre><code>例如：# chmod a+rx filename        让所有用户可以读和执行文件filename。      # chmod go-rx filename        取消同组和其他用户的读和执行文件filename的权限。      # chmod 741 filename        让本人可读写执行、同组用户可读、其他用户可执行文件filename。</code></pre><h1 id="chmod-R-755-home-oracle"><a href="#chmod-R-755-home-oracle" class="headerlink" title="chmod -R 755 &#x2F;home&#x2F;oracle"></a>chmod -R 755 &#x2F;home&#x2F;oracle</h1><pre><code>递归更改目录权限，本人可读写执行、同组用户可读可执行、其他用户可读可执行</code></pre><ol start="3"><li><p>修改文件日期<br> 命令：touch<br> 格式：touch filenae<br> 功能：改变文件的日期，不对文件的内容做改动，若文件不存在则建立新文件。<br> 例如：% touch file</p></li><li><p>链接文件<br> 命令：ln (link)<br> 格式：ln [option] filename linkname<br>   ln [option] directory pathname<br> 功能：为文件或目录建立一个链。其中，filename和directory是源文件名和<br>   源目录名；linkname和pathname分别表示与源文件或源目录名相链接的<br>   文件或目录。<br> 选项：-s  为文件或目录建立符号链接。不加-s表示为文件或目录建立硬链接<br> 注释：链接的目地在于，对一个文件或目录赋予两个以上的名字，使其可以出<br>   现在不同的目录中，既可以使文件或目录共享，又可以节省磁盘空间。<br> 例如：% ln -s filename linkname</p></li><li><p>显示日期<br> 命令：date<br> 例如：% date</p></li><li><p>显示日历<br> 命令：cal (calendar)<br> 格式：cal [month] year<br> 功能：显示某年内指定的日历<br> 例如：% cal 1998 </p></li><li><p>显示文件头部<br> 命令：head<br> 格式：head [option] filename<br> 功能：显示文件的头部<br> 选项：缺省  显示文件的头10行。<br>   -i    显示文件的开始 i行。<br> 例如：% head filename</p></li><li><p>显示文件尾部<br> 命令：tail<br> 格式：tail [option] filename<br> 功能：显示文件的尾部<br> 选项：缺省  显示文件的末10行。<br>   -i    显示文件最后 i行。<br>   +i    从文件的第i行开始显示。<br> 例如：% tail filename</p></li><li><p>显示用户标识<br> 命令：id<br> 格式：id [option] [user]<br> 功能：显示用户标识及用户所属的所有组。<br> 选项：-a 显示用户名、用户标识及用户所属的所有组<br> 注释：<br> 例如：% id username</p></li><li><p>查看当前登录的用户<br>命令：users</p></li><li><p>显示都谁登录到机器上<br>命令：who<br>格式：who<br>功能：显示当前正在系统中的所有用户名字，使用终端设备号，注册时间。<br>例如：% who</p></li><li><p>显示当前终端上的用户名<br>命令：whoami<br>格式：whoami<br>功能：显示出当前终端上使用的用户。<br>例如：% whoami</p></li><li><p>寻找文件<br>命令：find<br>格式：find pathname [option] expression<br>功能：在所给的路经名下寻找符合表达式相匹配的文件。<br>选项：-name     表示文件名<br>  -user     用户名，选取该用户所属的文件<br>  -size     按大小查找，以block为单位，一个block是512B<br>  -mtime n  按最后一次修改时间查找，选取n天内被修改的文件</p></li></ol><p>  -perm     按权限查找<br>          -type     按文件类型查找<br>  -atime    按最后一次访问时间查找</p><pre><code>例如：% find ./ -name &#39;*abc*&#39; -print</code></pre><ol start="14"><li><p>搜索文件中匹配符<br>命令：grep<br>格式：grep [option] pattern filenames<br>功能：逐行搜索所指定的文件或标准输入，并显示匹配模式的每一行。<br>选项：-i    匹配时忽略大小写<br>  -v 找出模式失配的行</p><p>例如：% grep -i ‘java*’ .&#x2F;test&#x2F;run.sh</p></li><li><p>统计文件字数<br>命令：wc [option] filename<br>功能：统计文件中的文件行数、字数和字符数。<br>选项：-l 统计文件的行数<br>-w 统计文件的单词数<br>-c 统计文件的字符数<br>注释：若缺省文件名则指标准输入<br>例如：% wc -c .&#x2F;test&#x2F;run.sh</p></li><li><p>显示磁盘空间<br>命令：df (disk free)<br>格式：df [option]<br>功能：显示磁盘空间的使用情况，包括文件系统安装的目录名、块设备名、总<br>  字节数、已用字节数、剩余字节数占用百分比。<br>选项：<br>-a：显示全部的档案系统和各分割区的磁盘使用情形<br>-i：显示i -nodes的使用量<br>-k：大小用k来表示 (默认值)<br>-t：显示某一个档案系统的所有分割区磁盘使用量<br>-x：显示不是某一个档案系统的所有分割区磁盘使用量<br>-T：显示每个分割区所属的档案系统名称<br>-h: 表示使用「Human-readable」的输出，也就是在档案系统大小使用 GB、MB 等易读的格式。<br>注释：<br>例如：% df -hi</p></li><li><p>查询档案或目录的磁盘使用空间<br>命令：du (disk usage)<br>格式：du [option] [filename]<br>功能：以指定的目录下的子目录为单位，显示每个目录内所有档案所占用的磁盘空间大小<br>选项：<br>-a：显示全部目录和其次目录下的每个档案所占的磁盘空间<br>-b：大小用bytes来表示 (默认值为k bytes)<br>-c：最后再加上总计 (默认值)<br>-s：只显示各档案大小的总合<br>-x：只计算同属同一个档案系统的档案<br>-L：计算所有的档案大小<br>-h: 表示档案系统大小使用 GB、MB 等易读的格式。<br>例如：% du -a<br>% du -sh &#x2F;etc 只显示该目录的总合<br>% du &#x2F;etc | sort -nr | more 统计结果用sort 指令进行排序，<br>sort 的参数 -nr 表示要以数字排序法进行反向排序。</p></li><li><p>显示进程<br>命令：ps<br>格式：ps [option]<br>功能：显示系统中进程的信息。包括进程ID、控制进程终端、执行时间和命令。<br>选项：<br>  -a 显示所有进程信息<br>  -U uidlist 列出这个用户的所有进程<br>  -e 显示当前运行的每一个进程信息<br>  -f 显示一个完整的列表</p></li></ol><p>  -x 显示包括没有终端控制的进程状况 。<br>    注释：<br>    例如：% ps -ef<br>  % ps -aux 然后再利用一个管道符号导向到grep去查找特定的进程,然后再对特定的进程进行操作。</p><ol start="19"><li><p>终止进程<br>命令：kill<br>格式：kill [option] pid<br>功能：向指定的进程送信号或终止进程。kill指令的用途是送一个signal给某一个process，<br>因为大部份送的都是用来杀掉 process 的 SIGKILL 或 SIGHUP ，因此称为 kill<br>选项：-9  强行终止进程<br>注释：pid标示进程号，可由ps命令得到。<br>例如：% kill -9 pid<br>你也可以用 kill -l 来察看可代替 signal 号码的数目字。kill 的详细情形请参阅 man kill。</p></li><li><p>查看自己的IP地址<br>命令：ifconfig<br>格式：ifconfig -a</p></li><li><p>查看路由表<br>命令：netstat<br>格式：netstat -rn</p></li><li><p>远程登录<br>命令：telnet<br>格式：telnet hostname</p></li><li><p>文件传输<br>命令：ftp (file transfer program)<br>格式：ftp hostname<br>功能：网络文件传输及远程操作。<br>选项：ftp命令：<br>   cd [dirname]  进入远程机的目录<br>   lcd [dirname] 设置本地机的目录<br>   dir&#x2F;ls        显示远程的目录文件<br>   bin           以二进制方式进行传输</p></li></ol><p>   asc           以文本文件方式进行传输<br>           get&#x2F;mget      从远程机取一个或多个文件<br>           put&#x2F;mput      向远程机送一个或多个文件<br>           prompt        打开或关闭多个文件传送时的交互提示<br>           close         关闭与远程机的连接<br>           quit          退出ftp<br>   !&#x2F;exit ftp登陆状态下，!表示暂时退出ftp状态回到本地目录，exit表示返回ftp状态<br>    注释：<br>    例如：% ftp hostname</p><ol start="24"><li>查看自己的电子邮件<br>命令：mailx<br>格式：mailx<br>选项：<br>delete  删除<br>next    下一个</li></ol><p>quit    退出<br>         reply   回复   </p><ol start="25"><li><p>回忆命令<br>命令：history<br>格式：history<br>功能：帮助用户回忆执行过的命令。<br>选项：<br>注释：<br>例如：% history</p></li><li><p>网上对话<br>命令：talk<br>格式：talk username<br>功能：在网上与另一用户进行对话。<br>选项：<br>注释：对话时系统把终端分为上下两部分，上半部显示自己键入信息，下半部<br>  显示对方用户键入的信息。键入delete或Ctrl+C则结束对话。<br>例如：% talk username</p></li><li><p>允许或拒绝接受信息<br>命令：mesg (message)<br>格式：mesg [n&#x2F;y]<br>功能：允许或拒绝其它用户向自己所用的终端发送信息。<br>选项：n 拒绝其它用户向自己所用的终端写信息<br>  y 允许其它用户向自己所用的终端写信息（缺省值）<br>注释：<br>例如：% mesg n</p></li><li><p>给其他用户写信息<br>命令：write<br>格式：write username [ttyname]<br>功能：给其他用户的终端写信息。<br>选项：<br>注释：若对方没有拒绝，两用户可进行交谈，键入EOF或Ctrl+C则结束对话。<br>例如：write username</p></li><li><p>创建、修改、删除用户和群组<br>a. 创建群组：<br>例如： groupadd oinstall    创建群组名为oinstall的组<br>groupadd -g 344 dba<br>创建组号是344的组，此时在&#x2F;etc&#x2F;passwd文件中产生一个组ID（GID）是344的项目。<br>b. 修改群组：<br>groupmod:该命令用于改变用户组帐号的属性<br>groupmod –g 新的GID 用户组帐号名<br>groupmod –n 新组名 原组名：此命令由于改变用户组的名称</p><p>c. 删除群组：</p></li></ol><p>groupdel 组名：该命令用于删除指定的组帐号</p><pre><code>d. 新建用户：</code></pre><p>命令： useradd [－d home] [－s shell] [－c comment] [－m [－k template]]<br>[－f inactive] [－e expire ] [－p passwd] [－r] name<br>主要参数<br>-c：加上备注文字，备注文字保存在passwd的备注栏中。　<br>-d：指定用户登入时的启始目录。<br>-D：变更预设值。<br>-e：指定账号的有效期限，缺省表示永久有效。<br>-f：指定在密码过期后多少天即关闭该账号。<br>-g：指定用户所属的群组。<br>-G：指定用户所属的附加群组。<br>-m：自动建立用户的登入目录。<br>-M：不要自动建立用户的登入目录。<br>-n：取消建立以用户名称为名的群组。<br>-r：建立系统账号。<br>-s：指定用户登入后所使用的shell。<br>-u：指定用户ID号。</p><p>举例： # useradd -g oinstall -G dba oracle  创建Oracle用户</p><pre><code>e. 删除用户</code></pre><p>命令： userdel 用户名<br>删除指定的用户帐号<br>userdel –r 用户名(userdel 用户名;rm 用户名)：删除指定的用户帐号及宿主目录<br>例：#useradd -g root kkk &#x2F;&#x2F;把kkk用户加入root组里</p><pre><code>f. 修改用户</code></pre><p>命令： usermod<br>修改已有用户的信息<br>usermod –l 旧用户名 新用户名： 修改用户名<br>usermod –L 用户名： 用于锁定指定用户账号，使其不能登陆系统<br>usermod –U 用户名： 对锁定的用户帐号进行解锁<br>passwd –d 用户名： 使帐号无口令，即用户不需要口令就能登录系统<br>例：#usermod -l user2 user1 &#x2F;&#x2F;把用户user2改名为user1</p><ol start="30"><li><p>启动、关闭防火墙<br>永久打开或则关闭<br>chkconfig iptables on<br>chkconfig iptables off<br>即时生效：重启后还原<br>service iptables start<br>service iptables stop<br> 或者：<br>&#x2F;etc&#x2F;init.d&#x2F;iptables start<br>&#x2F;etc&#x2F;init.d&#x2F;iptables stop</p></li><li><p>启动VSFTP服务<br>即时启动： &#x2F;etc&#x2F;init.d&#x2F;vsftpd start<br>即时停止： &#x2F;etc&#x2F;init.d&#x2F;vsftpd stop</p></li></ol><p>开机默认VSFTP服务自动启动:<br>方法一:(常用\方便)<br>[root@localhost etc]# chkconfig –list|grep vsftpd ( 查看情况)<br>vsftpd          0:off   1:off   2:off   3:off   4:off   5:off   6:off<br>[root@localhost etc]# chkconfig vsftpd on  (执行ON设置)<br>或者:方法二:<br>修改文件 &#x2F;etc&#x2F;rc.local , 把行&#x2F;usr&#x2F;local&#x2F;sbin&#x2F;vsftpd &amp; 插入文件中，以实现开机自动启动。</p><ol start="32"><li>vi技巧<br>a. 进入输入模式<br>新增 (append)<br>a ：从光标所在位置後面开始新增资料，光标後的资料随新增资料向後移动。<br>A：从光标所在列最後面的地方开始新增资料。</li></ol><p>插入 (insert)<br>i：从光标所在位置前面开始插入资料，光标後的资料随新增资料向後移动。<br>I ：从光标所在列的第一个非空白字元前面开始插入资料。</p><p>开始 (open)<br>o ：在光标所在列下新增一列并进入输入模式。<br>O: 在光标所在列上方新增一列并进入输入模式。<br>b. 退出vi<br>在指令模式下键入:q,:q!,:wq或:x(注意:号），就会退出vi。其中:wq和:x是存盘退出，而:q是直接退出，如果文件已有新的变化，vi会提示你保存文件而:q命令也会失效，这时你可以用:w命令保存文件后再用:q 退出，或用:wq或:x命令退出，如果你不想保存改变后的文件，你就需要用:q!命令，这个命令将不保存文件而直接退出vi。</p><p>c. 删除与修改文件的命令：<br>x：删除光标所在字符。<br>dd ：删除光标所在的列。<br>r ：修改光标所在字元，r 後接著要修正的字符。<br>R：进入取替换状态，新增文字会覆盖原先文字，直到按 [ESC] 回到指令模式下为止。<br>s：删除光标所在字元，并进入输入模式。<br>S：删除光标所在的列，并进入输入模式。</p><p>d. 屏幕翻滚类命令<br>Ctrl+u: 向文件首翻半屏<br>Ctrl+d: 向文件尾翻半屏<br>Ctrl+f: 向文件尾翻一屏<br>Ctrl＋b: 向文件首翻一屏<br>nz: 将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p><p>e. 删除命令<br>ndw或ndW: 删除光标处开始及其后的n-1个字<br>do: 删至行首<br>d$: 删至行尾<br>ndd: 删除当前行及其后n-1行<br>x或X: 删除一个字符，x删除光标后的，而X删除光标前的<br>Ctrl+u: 删除输入方式下所输入的文本</p><p>f. 搜索及替换命令<br>&#x2F;pattern: 从光标开始处向文件尾搜索pattern<br>?pattern: 从光标开始处向文件首搜索pattern<br>n: 在同一方向重复上一次搜索命令<br>N: 在反方向上重复上一次搜索命令<br>:s&#x2F;p1&#x2F;p2&#x2F;g: 将当前行中所有p1均用p2替代<br>:n1,n2s&#x2F;p1&#x2F;p2&#x2F;g: 将第n1至n2行中所有p1均用p2替代<br>:g&#x2F;p1&#x2F;s&#x2F;&#x2F;p2&#x2F;g: 将文件中所有p1均用p2替换</p><p>g. 复制，黏贴<br>(1) 选定文本块，使用v进入可视模式；移动光标键选定内容<br>(2) 复制选定块到缓冲区，用y；复制整行，用yy<br>(3) 剪切选定块到缓冲区，用d；剪切整行用dd<br>(4) 粘贴缓冲区中的内容，用p</p><p>h. 其他<br>在同一编辑窗打开第二个文件，用:sp [filename]<br>在多个编辑文件之间切换，用Ctrl+w</p>]]></content>
      
      
      <categories>
          
          <category> linux维护指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 进程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国联通宽带</title>
      <link href="/330016552.html"/>
      <url>/330016552.html</url>
      
        <content type="html"><![CDATA[<p>摄像头 价格199 型号vs302 优惠券70<br>路由器 价格399 型号vs010 优惠券190</p><p>大王卡宽带收费标准：大王卡宽带收费标准是王卡宽带业务分为：大王卡宽带业务和天地王卡宽带业务。大王卡宽带：腾讯大王卡基础套餐费19元&#x2F;月，宽带日租1元&#x2F;天，每月最低消费5元，网速100M。天地王卡宽带：地王卡宽带：腾讯地王卡基础套餐费39元&#x2F;月，宽带月租10元&#x2F;月，网速100M。腾讯天王卡基础套餐费59元&#x2F;月，宽带月租10元&#x2F;月，网速200M。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java-b 基础</title>
      <link href="/524913262.html"/>
      <url>/524913262.html</url>
      
        <content type="html"><![CDATA[<h3 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h3><pre><code>- 在同一个类中，定义了多个同名的方法，这些同名的方法具有同种的功能。- 每个方法具有不同的参数类型或参数个数，这些同名的方法，就构成了重载关系</code></pre> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//案例 重载</span><br><span class="line">public class MethdDemo &#123;</span><br><span class="line">    public static void fn(int a)&#123;</span><br><span class="line">        //方法体</span><br><span class="line">   &#125;</span><br><span class="line">   public static void fn(int a，int b)&#123;</span><br><span class="line">        //方法体</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 求最大值</span><br><span class="line">public class test &#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        //定义数组</span><br><span class="line">      int[] arr=&#123;1,2,66,33&#125;;</span><br><span class="line">      int max=0;</span><br><span class="line">      for(int i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">            if(arr[i]&gt;max)&#123;</span><br><span class="line">            max=arr[i];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复制数组"><a href="#复制数组" class="headerlink" title="复制数组"></a>复制数组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//定义数组</span><br><span class="line">        int[] arr=&#123;1,2,66,33&#125;;</span><br><span class="line">        //复制[from,to) 索引数据，到 newarr 数组</span><br><span class="line">        int to=4;</span><br><span class="line">        int from=2;</span><br><span class="line">        int index=0;</span><br><span class="line">        int[] newarr=new int[to-from];</span><br><span class="line">        for(int i=from;i&lt;to;i++)&#123;</span><br><span class="line">            newarr[index]=arr[i];</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        //遍历新数组</span><br><span class="line">        for(int i:newarr)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="方法基本内存图"><a href="#方法基本内存图" class="headerlink" title="方法基本内存图*"></a>方法基本内存图*</h3><pre><code>1. 方法在栈中运行2. new 都是在堆中开辟空间3. 复制数组的时候 它们是同一个地址4. 重载 方法名相同 参数类型个数不同</code></pre><p>    5. 每一个私有化成员变量，都需要提供get与set ??[不懂]</p><ol><li><p>基本数据类型与引用数据类型</p></li><li><p>基本数据类型</p><ul><li>整数类型</li><li>浮点数类型</li><li>布尔类型</li><li>字符类型</li></ul></li><li><p>引用数据类型</p><ul><li>…</li></ul></li></ol><p>    </p><h3 id="栈和堆的关系"><a href="#栈和堆的关系" class="headerlink" title="栈和堆的关系"></a>栈和堆的关系</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">栈和堆的关系是这样的：</span><br><span class="line">当我们创建一个对象时，首先在栈中分配一块内存，这个内存用于存储这个对象的引用；</span><br><span class="line">接着在堆中分配一块内存，用于存储这个对象的数据；</span><br><span class="line">最后将这个对象的引用存储到栈中。</span><br><span class="line">当这个对象的引用不再被使用时，JVM会在某个时间点将它回收掉，同时也会释放堆中相应的内存空间。</span><br></pre></td></tr></table></figure><h3 id="随机数-验证码"><a href="#随机数-验证码" class="headerlink" title="随机数 验证码"></a>随机数 验证码</h3><p>    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//实现大小写a~z 的验证码</span><br><span class="line">        char[] chs=new char[52];</span><br><span class="line">        for(int i=0;i&lt;chs.length;i++)&#123;</span><br><span class="line">            if(i&lt;=25)&#123;</span><br><span class="line">                chs[i]=(char)(97+i);</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                chs[i]=(char)(65+i-26);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        Random r=new Random();</span><br><span class="line">        //随机数不包含 chs.length</span><br><span class="line">        int randomIndex=r.nextInt(chs.length);</span><br><span class="line">        System.out.println(chs[randomIndex]);</span><br></pre></td></tr></table></figure><h3 id="双色球彩票系统"><a href="#双色球彩票系统" class="headerlink" title="双色球彩票系统"></a>双色球彩票系统</h3><pre><code>    功能:打印奖池号码 打印用户号码</code></pre><p><img src="/images/pasted-1.png" alt="upload successful"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//6个红球 1个蓝球 数组长度：7</span><br><span class="line">      Random r=new Random();</span><br><span class="line">      int[] arr=new int[7];</span><br><span class="line">      int[] userarr=new int[7];</span><br><span class="line">      for (int i=0;i&lt;arr.length-1;i++)&#123;</span><br><span class="line">          int rs=r.nextInt(16);</span><br><span class="line">          if(Arrays.asList(arr).contains(rs))&#123;</span><br><span class="line">              System.out.println(&quot;已存在&quot;);</span><br><span class="line">          &#125;else&#123;</span><br><span class="line">              // 不存在则写入数组</span><br><span class="line">              arr[i]=rs;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      Scanner sc=new Scanner(System.in);</span><br><span class="line">      for (int i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">          System.out.println(&quot;请输入你的&quot;+(i+1)+&quot;个中奖号码！&quot;);</span><br><span class="line">          while (true)&#123;</span><br><span class="line">              int ur=sc.nextInt();</span><br><span class="line">              if((0&gt;ur) || (ur&gt;=16))&#123;</span><br><span class="line">                  System.out.println(&quot;请输入0~17&quot;);</span><br><span class="line">                  continue;</span><br><span class="line">              &#125;</span><br><span class="line">              userarr[i]=ur;</span><br><span class="line">              break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(&quot;奖池中奖号码&quot;);</span><br><span class="line">      for(int i:arr)&#123;</span><br><span class="line">          System.out.println(i);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.println(&quot;你的中奖号码&quot;);</span><br><span class="line">      for(int i:userarr)&#123;</span><br><span class="line">          System.out.println(i);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 格式:数据类型[][] 数组名 = new 数据类型[][]&#123;&#123;元素1,元素2),&#123;元素1,元素2&#125;&#125;</span><br><span class="line">- 范例: intl[][] arr = new int[][]&#123;&#123;11,22&#125;,&#123;33,44&#125;&#125;;</span><br><span class="line">- 简化格式: 数据类型[][] 数组名 =&#123;&#123;元素1,元素2&#125;,&#123;元素1,元素2&#125;&#125;;</span><br><span class="line">- 范例: int[][] arr =&#123;&#123;11,22&#125;,&#123;33,44&#125;&#125;</span><br><span class="line">- 反例: int arr[][] =&#123;&#123;11,22&#125;,&#123;33,44&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">int[][] arr=&#123;</span><br><span class="line">&#123;1,2,3&#125;.</span><br><span class="line">&#123;11,22,33&#125;</span><br><span class="line">&#125;</span><br><span class="line">//输出 地址</span><br><span class="line">System.out.println(arr[1]);</span><br><span class="line">//输出 11</span><br><span class="line">System.out.println(arr[1][0]);</span><br></pre></td></tr></table></figure><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象*"></a>面向对象*</h3><p>没有就 new 一个<br>我要拿杯子接水，我建立一个容器来接水</p><h3 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h3><p>命名：</p><pre><code>  类的成员变量：一般为名词  类的成员方法：一般为动词</code></pre><p>获得对象:</p><pre><code>类名new 一下: 类名 对象名=new 类名()</code></pre><p>通过对象使用 类的方法:</p><pre><code>对象名.方法名()</code></pre><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>私有成员变量private  应当提供get与set 方法</p><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>类变量age 方法变量age ，优先使用最近的age，使用this 可以指向类变量。this.age&#x3D;age;</p><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><p>与类名一致，没有返回值<br>创建对象初始化成员变量<br>创建一次调用一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class test1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        test1 test=new test1();</span><br><span class="line">    &#125;</span><br><span class="line">    public test1()&#123;</span><br><span class="line">        System.out.println(&quot;我被调用了吗&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="javaBean-类"><a href="#javaBean-类" class="headerlink" title="javaBean 类"></a>javaBean 类</h3><p><img src="/images/pasted-2.png" alt="upload successful"></p><h3 id="成员变量和局部变量的区别"><a href="#成员变量和局部变量的区别" class="headerlink" title="成员变量和局部变量的区别"></a>成员变量和局部变量的区别</h3><p><img src="/images/pasted-3.png" alt="upload successful"></p><h3 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h3><p><img src="/images/pasted-6.png" alt="upload successful"><br><img src="/images/pasted-4.png" alt="upload successful"></p><p><img src="/images/pasted-5.png" alt="upload successful"></p><p>创建一个类用来存取数据，私有成员变量提供get set 方法</p><p>可以new 这个类<br>goods[] arr &#x3D;new goods[3];</p><p>g1.getId() 取id</p><h3 id="api-文档"><a href="#api-文档" class="headerlink" title="api 文档"></a>api 文档</h3><p>    放到个人阿里云盘上面去了 文件无法分享</p><h3 id="string-概述"><a href="#string-概述" class="headerlink" title="string 概述"></a>string 概述</h3><pre><code>字符串拼接 只要有中文就会拼接在以前</code></pre><p>例如 “123”+”我是字符串”&#x3D;”123我是字符串” &#x2F;&#x2F;这里产生一个新的字符串(新地址)</p><p>离谱的操作</p><p><img src="/images/pasted-9.png" alt="upload successful"></p><h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h3><p> &#x3D;&#x3D; 比较的到底是什么</p><p>    比较的是地址值<br> string 是引用数据类型，请看如图</p><p><img src="/images/pasted-14.png" alt="upload successful"></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">equals方法(要比较的字符串) 完全一样结果才是true，否则为false</span><br><span class="line">equalslgnoreCase(要比较的字符串) 完全一样结果才是true，否则为false 忽略大小写的比较 (常用：验证码比较)</span><br></pre></td></tr></table></figure><p>    如果要比较字符串里面的内容<br>    使用方法：变量名.equals(“”)</p><p>注意scanner 的next 是new 出来的<br><img src="/images/pasted-15.png" alt="upload successful"></p><h3 id="用户登入源码"><a href="#用户登入源码" class="headerlink" title="用户登入源码"></a>用户登入源码</h3><p>    字符串比较做简单登入</p><h3 id="字符串遍历"><a href="#字符串遍历" class="headerlink" title="字符串遍历"></a>字符串遍历</h3><pre><code>    public char charAt(int index): 根据索引返回字符    public int length(): 返回此字符串的长度    数组的长度:数组名.length arr.length    字符串的长度:字符串对象.length()  obj.length(0)        </code></pre><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><p>  <br><img src="/images/pasted-16.png" alt="upload successful"></p><h3 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h3><p><img src="/images/pasted-17.png" alt="upload successful"></p><h3 id="字符串截取-substring"><a href="#字符串截取-substring" class="headerlink" title="字符串截取 substring"></a>字符串截取 substring</h3><p>    substring()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String str=17673645378</span><br><span class="line">//取前三位</span><br><span class="line">String start=str.substring(0,3)</span><br><span class="line">//取后四位</span><br><span class="line">String end=str.substring(7)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字符串替换-replace"><a href="#字符串替换-replace" class="headerlink" title="字符串替换 replace"></a>字符串替换 replace</h3><p>    replace()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String str=&quot;玩的好，下次别玩了TMD&quot;</span><br><span class="line">//TMD 替换 ***</span><br><span class="line">String result=str.replace(&quot;TMD&quot;,&quot;***&quot;)</span><br><span class="line"></span><br><span class="line">也许 关键字它可以是一个数组</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字符串-stringbuilder-基本操作"><a href="#字符串-stringbuilder-基本操作" class="headerlink" title="字符串 stringbuilder 基本操作"></a>字符串 stringbuilder 基本操作</h3><p>使用：字符串拼接，使用string str&#x3D;sb.tostring() 输出 sb 即可<br><img src="/images/pasted-19.png" alt="upload successful"></p><p><img src="/images/pasted-22.png" alt="upload successful"></p><p><img src="/images/pasted-18.png" alt="upload successful"></p><p>内容反转 reverse() 可以解决对称数</p><p>11211 只需要原来字符串与反转比较即可</p><h3 id="字符串-stringjoiner-基本操作"><a href="#字符串-stringjoiner-基本操作" class="headerlink" title="字符串 stringjoiner 基本操作"></a>字符串 stringjoiner 基本操作</h3><p>字符串拼接的时候需要添加头部尾部分割符怎么办，例如三个数 1 2 3 拼接成 [1,2,3]</p><pre><code>StringJoiner  sj=new StringJoiner(&quot;,&quot;,&quot;[&quot;,&quot;]&quot;);String str=sj.add(1).add(2).add(3).toString();</code></pre><p><img src="/images/pasted-20.png" alt="upload successful"></p><p><img src="/images/pasted-21.png" alt="upload successful"></p><h3 id="字符串原理"><a href="#字符串原理" class="headerlink" title="字符串原理"></a>字符串原理</h3><p><img src="/images/pasted-23.png" alt="upload successful"><br><img src="/images/pasted-24.png" alt="upload successful"><br><img src="/images/pasted-26.png" alt="upload successful"><br><img src="/images/pasted-25.png" alt="upload successful"></p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p><img src="/images/pasted-28.png" alt="upload successful"><br>jdk 12 新特性<br><img src="/images/pasted-27.png" alt="upload successful"></p><h3 id="arraylist-集合基本使用"><a href="#arraylist-集合基本使用" class="headerlink" title="arraylist 集合基本使用"></a>arraylist 集合基本使用</h3><p>ArrayList是Java中集合框架中的列表类之一，它实现了List接口，可以用来存储任何非空对象。它是基于数组实现的，可以动态调整大小。</p><p>ArrayList的使用相对简单，具体步骤如下：</p><ol><li><p>创建ArrayList对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br></pre></td></tr></table></figure></li><li><p>添加元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.add(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;cherry&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>访问元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">firstElement</span> <span class="operator">=</span> list.get(<span class="number">0</span>); <span class="comment">// 获取第一个元素</span></span><br><span class="line"><span class="type">String</span> <span class="variable">lastElement</span> <span class="operator">=</span> list.get(list.size() - <span class="number">1</span>); <span class="comment">// 获取最后一个元素</span></span><br></pre></td></tr></table></figure></li><li><p>修改元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.set(<span class="number">1</span>, <span class="string">&quot;orange&quot;</span>); <span class="comment">// 将第二个元素修改为&quot;orange&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>删除元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.remove(<span class="number">2</span>); <span class="comment">// 删除第三个元素</span></span><br><span class="line">list.remove(<span class="string">&quot;apple&quot;</span>); <span class="comment">// 删除元素值为&quot;apple&quot;的元素</span></span><br></pre></td></tr></table></figure></li><li><p>遍历元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String fruit : list) &#123;</span><br><span class="line">    System.out.println(fruit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者使用迭代器遍历：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; iter = list.iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fruit</span> <span class="operator">=</span> iter.next();</span><br><span class="line">    System.out.println(fruit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>其他常用的方法包括：</p><ul><li>clear()：清空ArrayList中的所有元素</li><li>contains(Object o)：判断ArrayList中是否包含指定的元素</li><li>indexOf(Object o)：查找指定元素在ArrayList中的位置，如果不存在则返回-1</li><li>size()：返回ArrayList中元素的个数</li></ul><p>需要注意的是，ArrayList是非线程安全的，如果多个线程同时访问一个ArrayList对象，则需要实现适当的同步机制。</p><p>以上是ArrayList的基本使用方法，更多的方法和详细说明可以参考Java官方文档。</p><h3 id="static-关键字解析"><a href="#static-关键字解析" class="headerlink" title="static 关键字解析"></a>static 关键字解析</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在Java中，static关键字可以用于字段、方法和代码块上。</span><br><span class="line"></span><br><span class="line">当用于字段上时，static关键字表示该字段是静态的，也就是说这个属性属于类而不是属于对象，它被所有的对象实例共享。因此，static字段可以通过类名调用，而不需要生成对象实例。同时，静态字段的值在整个程序运行期间都是唯一不变的，因为它只会被初始化一次。</span><br><span class="line"></span><br><span class="line">当用于方法上时，static关键字表示该方法是静态方法，也就是说这个方法属于类而不是属于对象。和静态字段一样，它可以通过类名调用而不需要生成对象实例。静态方法不能访问对象的非静态属性，同时也不能使用this关键字。</span><br><span class="line"></span><br><span class="line">当用于代码块上时，static关键字表示该代码块是静态代码块，它会在类被加载时执行，且仅会执行一次，通常用于初始化静态字段或执行一些静态代码。</span><br><span class="line"></span><br><span class="line">总之，static关键字的作用是将字段或方法与对象之间的关系转化为与类之间的关系，使得我们可以在没有任何实例对象的情况下访问类或执行特定的代码块。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>如果子类父类中出现<strong>重名</strong>的成员变量，这时的访问是<strong>有影响的</strong>。代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fu1</span> &#123;</span><br><span class="line"><span class="comment">// Fu中的成员变量。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Zi1</span> <span class="keyword">extends</span> <span class="title class_">Fu1</span> &#123;</span><br><span class="line"><span class="comment">// Zi中的成员变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 访问父类中的num</span></span><br><span class="line">System.out.println(<span class="string">&quot;Fu num=&quot;</span> + num);</span><br><span class="line"><span class="comment">// 访问子类中的num</span></span><br><span class="line">System.out.println(<span class="string">&quot;Zi num=&quot;</span> + num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="comment">// 创建子类对象</span></span><br><span class="line"><span class="type">Zi1</span> <span class="variable">z</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Zi1</span>(); </span><br><span class="line">      <span class="comment">// 调用子类中的show方法</span></span><br><span class="line">z1.show(); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">演示结果：</span><br><span class="line"><span class="type">Fu</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">6</span></span><br><span class="line"><span class="type">Zi</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><p>子父类中出现了同名的成员变量时，子类会优先访问自己对象中的成员变量。如果此时想访问父类成员变量如何解决呢？我们可以使用super关键字。</p><h3 id="super访问父类成员变量"><a href="#super访问父类成员变量" class="headerlink" title="super访问父类成员变量"></a>super访问父类成员变量</h3><p>子父类中出现了同名的成员变量时，在子类中需要访问父类中非私有成员变量时，需要使用<code>super</code> 关键字，修饰父类成员变量，类似于之前学过的 <code>this</code> 。</p><p>需要注意的是：<strong>super代表的是父类对象的引用，this代表的是当前对象的引用。</strong></p><p><strong>使用格式：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">super</span>.父类成员变量名</span><br></pre></td></tr></table></figure><p>子类方法需要修改，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Fu</span> &#123;</span><br><span class="line"><span class="comment">// Fu中的成员变量。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Zi</span> <span class="keyword">extends</span> <span class="title class_">Fu</span> &#123;</span><br><span class="line"><span class="comment">// Zi中的成员变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="comment">// 访问方法中的num</span></span><br><span class="line">        System.out.println(<span class="string">&quot;method num=&quot;</span> + num);</span><br><span class="line">        <span class="comment">// 访问子类中的num</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Zi num=&quot;</span> + <span class="built_in">this</span>.num);</span><br><span class="line">        <span class="comment">// 访问父类中的num</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Fu num=&quot;</span> + <span class="built_in">super</span>.num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="comment">// 创建子类对象</span></span><br><span class="line"><span class="type">Zi1</span> <span class="variable">z</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Zi1</span>(); </span><br><span class="line">      <span class="comment">// 调用子类中的show方法</span></span><br><span class="line">z1.show(); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">演示结果：</span><br><span class="line">method num=<span class="number">1</span></span><br><span class="line">Zi num=<span class="number">6</span></span><br><span class="line">Fu num=<span class="number">5</span></span><br></pre></td></tr></table></figure><blockquote><p>小贴士：Fu 类中的成员变量是非私有的，子类中可以直接访问。若Fu 类中的成员变量私有了，子类是不能直接访问的。通常编码时，我们遵循封装的原则，使用private修饰成员变量，那么如何访问父类的私有成员变量呢？对！<strong>可以在父类中提供公共的getXxx方法和setXxx方法</strong>。</p></blockquote><h3 id="成员方法重名"><a href="#成员方法重名" class="headerlink" title="成员方法重名"></a>成员方法重名</h3><p>如果子类父类中出现<strong>重名</strong>的成员方法，则创建子类对象调用该方法的时候，子类对象会优先调用自己的方法。</p><h3 id="Override重写注解"><a href="#Override重写注解" class="headerlink" title="@Override重写注解"></a>@Override重写注解</h3><h3 id="final-常量"><a href="#final-常量" class="headerlink" title="final 常量"></a>final 常量</h3><h3 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h3><p>只运行一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java-反编译"><a href="#java-反编译" class="headerlink" title="java 反编译"></a>java 反编译</h3><p>把编译好的class 文件变成原来的文件</p><p>javap HelloWorld.class</p><p><img src="/images/pasted-32.png" alt="java反编译"></p><h3 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new Dog()&#123;</span><br><span class="line">@Override</span><br><span class="line">  public void show()&#123;</span><br><span class="line">   System.out.println(&quot;重写之后方法&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;.show();</span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>由高向低分别是： ()、!、算术运算符、关系运算符、逻辑运算符、 赋值运算符； </p><h3 id="项目界面"><a href="#项目界面" class="headerlink" title="项目界面"></a>项目界面</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 安装phpmyadmin</title>
      <link href="/2293724758.html"/>
      <url>/2293724758.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name phpmyadmin -d -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 使用寿命</title>
      <link href="/1791950421.html"/>
      <url>/1791950421.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /sys/class/mmc_host/mmc0/mmc0\:0001/life_time</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql 安装</title>
      <link href="/1558112624.html"/>
      <url>/1558112624.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> sudo docker run -d -p 3306:3306 -v /usbdata/mysql/conf:/etc/mysql/conf.d -v /usbdata/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name  mysql mysql</span><br><span class="line"> </span><br><span class="line"> docker run -p 3306:3306 --name mysql --restart=always --privileged=<span class="literal">true</span> \</span><br><span class="line">-v /usbdata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /usbdata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /usbdata/mysql/conf:/etc/mysql \</span><br><span class="line">-v /usbdata/mysql/etc/localtime:/etc/localtime:ro \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>mysql 登入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="operator">-</span>u root <span class="operator">-</span>p</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透</title>
      <link href="/3176183830.html"/>
      <url>/3176183830.html</url>
      
        <content type="html"><![CDATA[<h2 id="natapp"><a href="#natapp" class="headerlink" title="natapp"></a>natapp</h2><p>natapp 穿透3306</p><ul><li>优点<br>  .&#x2F;natapp -authtoken&#x3D;2a1a3b865758f0cd #可以直接穿透      </li><li>缺点<br>   .&#x2F;natapp -authtoken&#x3D;2a1a3b865758f0cd #端口无法固定</li></ul><h2 id="cloudflare"><a href="#cloudflare" class="headerlink" title="cloudflare"></a>cloudflare</h2><p>2023年4月9日<br>穿透http端口成功<br>端口：端口固定<br>穿透tcp：3306 端口失败</p><h2 id="natfrp"><a href="#natfrp" class="headerlink" title="natfrp"></a>natfrp</h2><p>2023年4月9日<br>端口：端口固定<br>可以直接穿透tcp：3306</p><p>systemctl start frpc@usdhisoct3rc38zr7npl868vuri8whfa:7820442</p><p>systemctl status frpc@usdhisoct3rc38zr7npl868vuri8whfa:7820442</p><p>systemctl &lt;enable|disable&gt; &lt;Unit名称&gt;<br>systemctl status &lt;Unit名称&gt;<br>systemctl disable frpc@usdhisoct3rc38zr7npl868vuri8whfa:7820442</p><p>journalctl -u frpc@usdhisoct3rc38zr7npl868vuri8whfa:7820442</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mariadb-server 安装</title>
      <link href="/554961827.html"/>
      <url>/554961827.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装MySQL的扩展-mariadb-server"><a href="#安装MySQL的扩展-mariadb-server" class="headerlink" title="安装MySQL的扩展 mariadb-server"></a>安装MySQL的扩展 mariadb-server</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y mariadb-server</span><br></pre></td></tr></table></figure><h3 id="开启远程登入"><a href="#开启远程登入" class="headerlink" title="开启远程登入"></a>开启远程登入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line">select host,user,password from user;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> &quot;root&quot;@&quot;%&quot; IDENTIFIED <span class="keyword">BY</span> &quot;password&quot; <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION; </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> &quot;root&quot;@&quot;192.168.0.1&quot; IDENTIFIED <span class="keyword">BY</span> &quot;password&quot; <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;# 限制ip连接</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; # 刷新生效一下</span><br><span class="line">systemctl restart mariadb.service 或者 service mariadb restart # 还是连接不上就重启一下mysql</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/mysql 文件夹下修改文件 my.cnf，将 bind-address = 127.0.0.1 这句话注释掉</span><br><span class="line">/etc/mysql/mariadb.conf.d  文件夹下修改文件 50-server.cnf ,将 bind-address = 127.0.0.1 这句话注释掉</span><br></pre></td></tr></table></figure><h3 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h3><p>用户授权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant SELECT, INSERT,update on test.* to dayu001@&#x27;%&#x27; identified by &#x27;password&#x27; with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>建立用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &quot;username&quot;@&quot;%&quot; IDENTIFIED BY &quot;password&quot;; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REVOKE ALL PRIVILEGES ON *.* FROM &#x27;dayu001&#x27;@&#x27;%&#x27; ;</span><br></pre></td></tr></table></figure><p>mysql -u dayu001 -p</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach --name some-mariadb --env MARIADB_USER=example-user --env MARIADB_PASSWORD=my_cool_secret --env MARIADB_ROOT_PASSWORD=my-secret-pw  mariadb:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 查看端口启用</title>
      <link href="/3757300725.html"/>
      <url>/3757300725.html</url>
      
        <content type="html"><![CDATA[<p>netstat -an|grep 3306</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>typecho 博客安装</title>
      <link href="/2432914433.html"/>
      <url>/2432914433.html</url>
      
        <content type="html"><![CDATA[<p>#首先用下面的命令把数据源处理一下</p><p>true &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mobian.list</p><p>#然后更新依赖和安装需要支持软件。</p><p>sudo apt-get update</p><p>apt-get install -y wget</p><p>apt-get install -y curl</p><p>apt-get install -y vim</p><p>#然后开始安装php和sql</p><p>#安装Nginx</p><p>apt install -y nginx</p><p>#安装PHP及部分扩展</p><p>apt install -y php php-fpm php-mysqli php-mbstring</p><p>#安装MySQL</p><p>apt install -y mariadb-server</p><p>#安装解压工具</p><p>apt install -y zip</p><p>#然后输入下面的命令创建数据库，数据库名typecho，添加用户到MySQL数据库中，用户名typecho  密码typecho，登录主机为localhost(仅允许本机登录，无法远程登录)</p><p>mysql -u root -p密码 &lt;&lt;EOF</p><p>create database if  not exists typecho default charset utf8 collate utf8_general_ci;</p><p>create user ‘typecho‘@’localhost’ identified by ‘typecho’;</p><p>grant all on typecho.* to ‘typecho‘@’localhost’;</p><p>flush privileges;</p><p>EOF</p><p>#下载typecho</p><p>wget -O &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip <a href="https://github.com/typecho/typecho/releases/latest/download/typecho.zip">https://github.com/typecho/typecho/releases/latest/download/typecho.zip</a></p><p>#解压，解压完毕删除原压缩包 删除Nginx默认页面</p><p>unzip -d &#x2F;var&#x2F;www&#x2F;html &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;index.nginx-debian.html</p><p>#授予读写权限</p><p>chmod -R 777 &#x2F;var&#x2F;www&#x2F;html</p><p>#备份Nginx配置</p><p>cp -p &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default &#x2F;etc&#x2F;nginx&#x2F;sites-enabled_default.<code>date +%Y-%m-%d_%H-%M-%S</code>.bak</p><p>#还原Nginx配置</p><p>wget -O &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default <a href="https://imtx-bucket.oss-cn-shenzhen.aliyuncs.com/linux/backup/typecho/default">https://imtx-bucket.oss-cn-shenzhen.aliyuncs.com/linux/backup/typecho/default</a></p><p>#重新加载配置文件，重启Nginx</p><p>nginx -s reload</p><p>systemctl restart nginx</p><p>等到它运行结束出现命令提示符就安装结束了，可以在浏览器中使用棒子的IP打开博客了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>青龙 拉取私有仓库</title>
      <link href="/702311515.html"/>
      <url>/702311515.html</url>
      
        <content type="html"><![CDATA[<p>青龙面板教程(二)：拉取私有仓库</p><p>开发大观园</p><p>已于 2022-12-15 12:29:06 修改</p><p>1854<br> 收藏 2<br>分类专栏： 青龙面板 文章标签： git github<br>版权</p><p>青龙面板<br>专栏收录该内容<br>7 篇文章5 订阅<br>订阅专栏<br>一.前言<br>青龙面板平时一般拉的都是公开仓库，可以直接命令拉取即可，但有时我们需要拉取自身的私有仓库，则需要进行仓库账号配置操作。</p><p>二.正文<br>青龙面板使用git工具来进行拉库操作，按照以下步骤即可完成私有仓库的账号配置。</p><p>1.进入青龙面板容器会话终端，宝塔面板管理的话在docker模块那里可以进入。</p><p> 2.git工具开启账号保存功能，控制台输入以下命令：</p><p>git config –global credential.helper store<br>3.克隆目标仓库，控制台输入以下命令：</p><p>git clone your_repository_url<br>4.按提示输入仓库用户名和密码，成功拉取即可。</p><p> 5.至此已经git工具已经保存好目标仓库的账号信息，青龙面板可以直接拉取该私有仓库了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>debian 端口开放与关闭</title>
      <link href="/1698519486.html"/>
      <url>/1698519486.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install iptables</span><br></pre></td></tr></table></figure><h2 id="查看已开放的端口"><a href="#查看已开放的端口" class="headerlink" title="查看已开放的端口"></a>查看已开放的端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp</span><br></pre></td></tr></table></figure><h2 id="存放端口的文件"><a href="#存放端口的文件" class="headerlink" title="存放端口的文件"></a>存放端口的文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/services</span><br></pre></td></tr></table></figure><h2 id="端口开启与关闭"><a href="#端口开启与关闭" class="headerlink" title="端口开启与关闭"></a>端口开启与关闭</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># $PORT 指端口号</span><br><span class="line">&quot;sudo iptables -A INPUT -p tcp --dport $PORT -j DROP&quot;</span><br><span class="line">&quot;sudo iptables -A OUTPUT -p tcp --dport $PORT -j DROP&quot;  </span><br><span class="line"># 开放端口后 保存一些</span><br><span class="line">iptables-save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker一键安装可道云</title>
      <link href="/2458829238.html"/>
      <url>/2458829238.html</url>
      
        <content type="html"><![CDATA[<h3 id="docker一键安装可道云"><a href="#docker一键安装可道云" class="headerlink" title="docker一键安装可道云"></a>docker一键安装可道云</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 8089:80 --name kodbox -v /usbdata/kodbox:/var/www/html kodcloud/kodbox</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 可道云 </tag>
            
            <tag> 云盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker下安装alist</title>
      <link href="/1345941684.html"/>
      <url>/1345941684.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><p><code>/usbdata/alist</code> 本地路径<br><code>/data</code>卷<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -v /usbdata/alist:/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist:latest</span><br></pre></td></tr></table></figure><br>  <code>/mnt/alist/tem</code> 本地挂载路径<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -v /mnt/alist:/mnt/alist/data  -v /mnt/alist/tem:/mnt/alist/tem -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist-aria2:latest</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -v /mnt/usbdata/alist/data:/mnt/usbdata/alist/data  -v /mnt/usbdata/alist/tem:/mnt/usbdata/alist/tem -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist-aria2:latest</span><br></pre></td></tr></table></figure><h2 id="查看密码"><a href="#查看密码" class="headerlink" title="查看密码"></a>查看密码</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it alist ./alist admin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青龙部署cv cv 青龙面板</title>
      <link href="/2712148078.html"/>
      <url>/2712148078.html</url>
      
        <content type="html"><![CDATA[<h1 id="青龙部署cv-cv"><a href="#青龙部署cv-cv" class="headerlink" title="青龙部署cv cv"></a>青龙部署cv cv</h1><h4 id="1-安装docker"><a href="#1-安装docker" class="headerlink" title="1.安装docker"></a>1.安装docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> &gt; /etc/apt/sources.list.d/mobian.lis</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><h4 id="2-安装青龙容器与镜像"><a href="#2-安装青龙容器与镜像" class="headerlink" title="2.安装青龙容器与镜像"></a>2.安装青龙容器与镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">随身wifi用这个不卡 </span><br><span class="line">docker run -dit \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/config:/ql/config \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/log:/ql/log \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/db:/ql/db \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/scripts:/ql/scripts \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/jbot:/ql/jbot \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/repo:/ql/repo \</span><br><span class="line">-p 5700:5700 \</span><br><span class="line">-e ENABLE_HANGUP=<span class="literal">true</span> \</span><br><span class="line">-e ENABLE_WEB_PANEL=<span class="literal">true</span> \</span><br><span class="line">--name ql \</span><br><span class="line">--hostname ql \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">--restart always \</span><br><span class="line">--network host\</span><br><span class="line">whyour/qinglong:2.10.13</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这个可以是最新版本的</span></span><br><span class="line">docker run -dit \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/config:/ql/data/config \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/log:/ql/data/log \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/db:/ql/data/db \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/repo:/ql/data/repo \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/raw:/ql/data/raw \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/scripts:/ql/data/scripts \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/jbot:/ql/data/jbot \</span><br><span class="line">-v <span class="variable">$PWD</span>/ql/ninja:/ql/data/ninja \</span><br><span class="line">-p 5700:5700 \</span><br><span class="line">-p 5701:5701 \</span><br><span class="line">--name ql \</span><br><span class="line">--hostname ql \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">--network host\</span><br><span class="line">whyour/qinglong:2.15.17</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">-v $PWD/ql/config:/ql/config \</span><br><span class="line">-v $PWD/ql/log:/ql/log \</span><br><span class="line">-v $PWD/ql/db:/ql/db \</span><br><span class="line">-v $PWD/ql/repo:/ql/repo \</span><br><span class="line">-v $PWD/ql/raw:/ql/raw \</span><br><span class="line">-v $PWD/ql/scripts:/ql/scripts \</span><br><span class="line">-p 5700:5700 \</span><br><span class="line">--name ql \</span><br><span class="line">--hostname ql \</span><br><span class="line">--network host \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">whyour/qinglong:2.11.1</span><br></pre></td></tr></table></figure><h4 id="3-安装傻妞"><a href="#3-安装傻妞" class="headerlink" title="3.安装傻妞"></a>3.安装傻妞</h4><p>随身wifi推荐不安装 </p><p>第一种方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL http://zkyun.cc/install.sh)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-33.png" alt="upload successful"></p><p>第二种方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=sillyGirl;a=arm64;<span class="keyword">if</span> [[ $(<span class="built_in">uname</span> -a | grep <span class="string">&quot;x86_64&quot;</span>) != <span class="string">&quot;&quot;</span> ]];<span class="keyword">then</span> a=amd64;<span class="keyword">fi</span> ;<span class="keyword">if</span> [ ! -d <span class="variable">$s</span> ];<span class="keyword">then</span> <span class="built_in">mkdir</span> <span class="variable">$s</span>;<span class="keyword">fi</span> ;<span class="built_in">cd</span> <span class="variable">$s</span>;wget https://yanyu.ltd/https://github.com/cdle/<span class="variable">$&#123;s&#125;</span>/releases/download/main/<span class="variable">$&#123;s&#125;</span>_linux_<span class="variable">$a</span> -O <span class="variable">$s</span> &amp;&amp; <span class="built_in">chmod</span> 777 <span class="variable">$s</span>;pkill -9 <span class="variable">$s</span>;$(<span class="built_in">pwd</span>)/<span class="variable">$s</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-34.png" alt="upload successful"></p><p>成功运行截图<br><img src="/images/pasted-35.png" alt="upload successful"></p><h4 id="4-对接机器人go-cqhttp"><a href="#4-对接机器人go-cqhttp" class="headerlink" title="4.对接机器人go-cqhttp"></a>4.对接机器人go-cqhttp</h4><p><a href="https://dayuya.github.io/posts/20230502104122-1082586999/">linux 搭建qq机器人</a></p><h4 id="5-安装ark"><a href="#5-安装ark" class="headerlink" title="5.安装ark"></a>5.安装ark</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -S -L https://maiark-1256973477.cos.ap-shanghai.myqcloud.com/kiss.sh)</span><br></pre></td></tr></table></figure><p>安装目录 arkconfig.json 对接青龙的地址</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    # 服务端口</span><br><span class="line">    <span class="attr">&quot;Port&quot;</span><span class="punctuation">:</span> <span class="number">8082</span><span class="punctuation">,</span></span><br><span class="line">    # 鉴权Token</span><br><span class="line">    <span class="attr">&quot;Token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    # 短信登陆是否使用代理</span><br><span class="line">    <span class="attr">&quot;useProxy&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    # 代理api地址</span><br><span class="line">    <span class="attr">&quot;ProxyUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    # 青龙服务器配置</span><br><span class="line">    <span class="attr">&quot;servers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            # 服务器ID</span><br><span class="line">            <span class="attr">&quot;ServerID&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            # 服务器名称</span><br><span class="line">            <span class="attr">&quot;ServerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;服务器1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            # 服务器地址</span><br><span class="line">            <span class="attr">&quot;ServerUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://192.168.10.4:5700&quot;</span><span class="punctuation">,</span></span><br><span class="line">            # 青龙客户端ID</span><br><span class="line">            <span class="attr">&quot;ServerClientId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nzC-3R2vU123&quot;</span><span class="punctuation">,</span></span><br><span class="line">            # 青龙客户端密钥</span><br><span class="line">            <span class="attr">&quot;ServerSecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bnhz7aPK2-FjBD4Qjpe123&quot;</span><span class="punctuation">,</span></span><br><span class="line">            # 服务器最大CK数量</span><br><span class="line">            <span class="attr">&quot;ServerMAXck&quot;</span><span class="punctuation">:</span> <span class="number">99</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        # <span class="punctuation">&#123;</span></span><br><span class="line">        #     <span class="attr">&quot;ServerID&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        #     <span class="attr">&quot;ServerName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        #     <span class="attr">&quot;ServerUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        #     <span class="attr">&quot;ServerClientId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        #     <span class="attr">&quot;ServerSecret&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        #     <span class="attr">&quot;ServerMAXck&quot;</span><span class="punctuation">:</span> <span class="number">99</span></span><br><span class="line">        # <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="nonebot"><a href="#nonebot" class="headerlink" title="nonebot"></a>nonebot</h4><p>注意在docker 中安装的青龙环境自带python3.8.10<br>使用进入容器<code>python3 -V</code></p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在整个系统中查找名为 myfile.txt 的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name myfile.txt</span><br></pre></td></tr></table></figure><p><a href="https://github.com/sync-auto/6dylan6">推荐库</a></p><p><a href="https://nonebot.dev/docs/quick-start">nonebot2</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 文章永久链接</title>
      <link href="/2283798593.html"/>
      <url>/2283798593.html</url>
      
        <content type="html"><![CDATA[<h3 id="文章永久链接"><a href="#文章永久链接" class="headerlink" title="文章永久链接"></a>文章永久链接</h3><h4 id="在hexo-根目录下安装需要用到的插件-终端"><a href="#在hexo-根目录下安装需要用到的插件-终端" class="headerlink" title="在hexo 根目录下安装需要用到的插件(终端)"></a>在hexo 根目录下安装需要用到的插件(终端)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="修改站点配置文件-config-yml"><a href="#修改站点配置文件-config-yml" class="headerlink" title="修改站点配置文件_config.yml"></a>修改站点配置文件_config.yml</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 原</span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: http://dayuya.github.io&#x27;</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 修改后</span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: http://dayuya.github.io&#x27;</span><br><span class="line"># permalink: :year/:month/:day/:title/</span><br><span class="line"># permalink_defaults:</span><br><span class="line"># pretty_urls:</span><br><span class="line">#   trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">#   trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br><span class="line">permalink: posts/:abbrlink/</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32 #support crc16(default) and crc32</span><br><span class="line">  rep: dec   #support dec(default) and hex</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最后重新生成即可"><a href="#最后重新生成即可" class="headerlink" title="最后重新生成即可"></a>最后重新生成即可</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/16107.html"/>
      <url>/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to [Hexo] 这是一篇 适用于hexo的Markdown语法</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="新建-文章-Post-，页面-Page-和草稿-Draft"><a href="#新建-文章-Post-，页面-Page-和草稿-Draft" class="headerlink" title="新建 文章(Post)，页面(Page)和草稿(Draft)"></a>新建 文章(Post)，页面(Page)和草稿(Draft)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new post text</span><br><span class="line">新建后会在/source/_post创建一个【text.md】的文件 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new Page text </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new Draft text </span><br></pre></td></tr></table></figure><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h3 id="斜体文本"><a href="#斜体文本" class="headerlink" title="斜体文本"></a>斜体文本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本* </span><br><span class="line">_斜体文本*</span><br></pre></td></tr></table></figure><h3 id="加粗文本"><a href="#加粗文本" class="headerlink" title="加粗文本"></a>加粗文本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**加粗文本**</span><br><span class="line">__加粗文本__</span><br></pre></td></tr></table></figure><h3 id="加粗并斜体"><a href="#加粗并斜体" class="headerlink" title="加粗并斜体"></a>加粗并斜体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">***加粗并斜体文本***</span><br><span class="line">___加粗并斜体文本___</span><br><span class="line">*__加粗并斜体文本__*</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`高亮`文字</span><br></pre></td></tr></table></figure><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除文本~~</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. 一级列表</span><br><span class="line"></span><br><span class="line">   1. 二级列表</span><br><span class="line">   2. 二级列表</span><br><span class="line">      3. 三级列表</span><br><span class="line">      4. 三级列表</span><br><span class="line"></span><br><span class="line">2. 一级列表</span><br><span class="line"></span><br><span class="line">3. 一级列表</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* 一级列表</span><br><span class="line">  * 二级列表</span><br><span class="line">  * 二级列表</span><br><span class="line">    * 三级列表</span><br><span class="line">    * 三级列表</span><br><span class="line">* 一级列表</span><br><span class="line">* 一级列表</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">左对齐</span><br><span class="line">:----------</span><br><span class="line">右对齐</span><br><span class="line">----------:</span><br><span class="line">居中对齐</span><br><span class="line">:----------:</span><br><span class="line"></span><br><span class="line">| 课程表 | 星期一  |  星期二  |  星期三  | 星期四  |  星期五  |</span><br><span class="line">| :----: | :-----: | :------: | :------: | :-----: | :------: |</span><br><span class="line">|  上午  |  Math   | Chinese  |  Music   |  Math   | Chinese  |</span><br><span class="line">|  下午  | Chinese |    PE    |   Math   | English | Computer |</span><br><span class="line">| 晚自习 | English | Computer | Computer |  Math   | Chinese  |</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">课程表</th><th align="center">星期一</th><th align="center">星期二</th><th align="center">星期三</th><th align="center">星期四</th><th align="center">星期五</th></tr></thead><tbody><tr><td align="center">上午</td><td align="center">Math</td><td align="center">Chinese</td><td align="center">Music</td><td align="center">Math</td><td align="center">Chinese</td></tr><tr><td align="center">下午</td><td align="center">Chinese</td><td align="center">PE</td><td align="center">Math</td><td align="center">English</td><td align="center">Computer</td></tr><tr><td align="center">晚自习</td><td align="center">English</td><td align="center">Computer</td><td align="center">Computer</td><td align="center">Math</td><td align="center">Chinese</td></tr></tbody></table><table><thead><tr><th align="center">课程表</th><th align="center">星期一</th></tr></thead><tbody><tr><td align="center">上午</td><td align="center">Math</td></tr></tbody></table><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[博客主页](https://baidu.com)</span><br><span class="line"></span><br><span class="line">[follow me](https://baidu.com)</span><br></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![头像](https://gitee.com/yesright/blogimage/raw/master/img/avatar.png)</span><br><span class="line">![头像](/img/avatar.png)  //可以用相对地址，此处没有对应图片所以无法显示</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="剪切板的图片本地位置"><a href="#剪切板的图片本地位置" class="headerlink" title="剪切板的图片本地位置"></a>剪切板的图片本地位置</h3><p>&#x2F;source&#x2F;images</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openwrt 基本使用</title>
      <link href="/12857.html"/>
      <url>/12857.html</url>
      
        <content type="html"><![CDATA[<h3 id="网段设置"><a href="#网段设置" class="headerlink" title="网段设置"></a>网段设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">所有的 192.168.123.x 需要根据树莓派所处网段修改，option gateway和option dns填写路由器的 IP，若树莓派获得的 IP 为 192.168.2.154，路由器 IP 为192.168.2.1，则需要这样修改：没有option broadcast 需要自行添加</span><br><span class="line">config interface &#x27;lan&#x27;</span><br><span class="line">option type &#x27;bridge&#x27;</span><br><span class="line">option ifname &#x27;eth0&#x27;</span><br><span class="line">option proto &#x27;static&#x27;</span><br><span class="line">option ipaddr &#x27;192.168.2.100&#x27;</span><br><span class="line">option netmask &#x27;255.255.255.0&#x27;</span><br><span class="line">option ip6assign &#x27;60&#x27;</span><br><span class="line">option gateway &#x27;192.168.2.1&#x27;</span><br><span class="line">option broadcast &#x27;192.168.2.255&#x27;</span><br><span class="line">option dns &#x27;192.168.2.1&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 基本使用</title>
      <link href="/7999.html"/>
      <url>/7999.html</url>
      
        <content type="html"><![CDATA[<h3 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="运行已停止的容器"><a href="#运行已停止的容器" class="headerlink" title="运行已停止的容器"></a>运行已停止的容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器ID(或者容器名)</span><br></pre></td></tr></table></figure><h3 id="容器创建后修改自启"><a href="#容器创建后修改自启" class="headerlink" title="容器创建后修改自启"></a>容器创建后修改自启</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always 容器ID(或者容器名)</span><br></pre></td></tr></table></figure><h3 id="删除指定容器"><a href="#删除指定容器" class="headerlink" title="删除指定容器"></a>删除指定容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f &lt;containerid&gt;</span><br></pre></td></tr></table></figure><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="关闭docker"><a href="#关闭docker" class="headerlink" title="关闭docker"></a>关闭docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><h3 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="查看docker运行状态"><a href="#查看docker运行状态" class="headerlink" title="查看docker运行状态"></a>查看docker运行状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><h3 id="重启daemon"><a href="#重启daemon" class="headerlink" title="重启daemon"></a>重启daemon</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl  daemon-reload</span><br></pre></td></tr></table></figure><h3 id="查看所有数据卷"><a href="#查看所有数据卷" class="headerlink" title="查看所有数据卷"></a>查看所有数据卷</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls </span><br></pre></td></tr></table></figure><ul><li>ps:使用docker inspect {image_name:tag}可查看该image的架构，其中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true &gt; /etc/apt/sources.list.d/mobian.list  删掉配置的源，不然就需要翻</span><br></pre></td></tr></table></figure></li></ul><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://rzp7u4lf.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/apt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h1 id="安装-依赖"><a href="#安装-依赖" class="headerlink" title="安装 依赖"></a>安装 依赖</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y curl</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y wget</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y vim</span><br></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p>安装命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>也可以使用国内 daocloud 一键安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><h3 id="docker容器设置自动启动"><a href="#docker容器设置自动启动" class="headerlink" title="docker容器设置自动启动"></a>docker容器设置自动启动</h3><p>如果已经启动的项目，则使用update更新：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always name</span><br></pre></td></tr></table></figure><h3 id="设置开机自启docker"><a href="#设置开机自启docker" class="headerlink" title="设置开机自启docker"></a>设置开机自启docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service   </span><br><span class="line">systemctl start docker.service      </span><br><span class="line">systemctl status docker.service    #查看是否启动</span><br></pre></td></tr></table></figure><h3 id="docker-官网"><a href="#docker-官网" class="headerlink" title="docker 官网"></a>docker 官网</h3><p><a href="https://registry.hub.docker.com/">docker</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 基本使用</title>
      <link href="/37983.html"/>
      <url>/37983.html</url>
      
        <content type="html"><![CDATA[<h3 id="查看硬盘"><a href="#查看硬盘" class="headerlink" title="查看硬盘"></a>查看硬盘</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><h3 id="编辑本地host"><a href="#编辑本地host" class="headerlink" title="编辑本地host"></a>编辑本地host</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/hosts </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/%5Cimages%5Cpasted-0.png" alt="host文件"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 迅雷</title>
      <link href="/36473.html"/>
      <url>/36473.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=xunlei --hostname=mynas --net=host -v /usbdata/xunlei:/xunlei/data -v /usbdata/downloads:/xunlei/downloads --restart=unless-stopped --privileged cnk3x/xunlei:latest</span><br></pre></td></tr></table></figure><p>默认端口:2345</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker 镜像位置修改</title>
      <link href="/11937.html"/>
      <url>/11937.html</url>
      
        <content type="html"><![CDATA[<h3 id="docker-镜像位置修改"><a href="#docker-镜像位置修改" class="headerlink" title="docker 镜像位置修改"></a>docker 镜像位置修改</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  &quot;data-root&quot;: &quot;/www/docker&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 重启</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">#个人镜像加速地址</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://rzp7u4lf.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>debian 随身wifi</title>
      <link href="/51058.html"/>
      <url>/51058.html</url>
      
        <content type="html"><![CDATA[<h3 id="挂载外置设备"><a href="#挂载外置设备" class="headerlink" title="挂载外置设备"></a>挂载外置设备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">5.ssh连接地址10.42.0.1</span><br><span class="line">ssh root@10.42.0.1 密码:1313144</span><br><span class="line">切换usb功能命令：</span><br><span class="line">echo host&gt;/sys/kernel/debug/usb/ci_hdrc.0/role切换后可通过带供电的扩展坞插u盘硬盘（切换功能usb网络共享和adb会失效拔插棒子恢复)</span><br><span class="line">lsblk查看磁盘，lsusb查看hub接口插入情况</span><br><span class="line"></span><br><span class="line">设置swap：mkswap /dev/sda1</span><br><span class="line">启用swap：swapon /dev/sda1</span><br><span class="line"></span><br><span class="line">mount /dev/sda2 /usbdata</span><br></pre></td></tr></table></figure><h3 id="u盘自动挂载-启动配置文件"><a href="#u盘自动挂载-启动配置文件" class="headerlink" title="u盘自动挂载 启动配置文件"></a>u盘自动挂载 启动配置文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># 文件地址</span><br><span class="line">/usr/sbin/mobian-usb-gadget</span><br><span class="line">    ###########################</span><br><span class="line">#    echo host&gt;/sys/kernel/debug/usb/ci_hdrc.0/role</span><br><span class="line">#    sleep 5</span><br><span class="line">#    mount /dev/sda2 /mnt/www</span><br><span class="line">#    sleep 1</span><br><span class="line">#    swapon /dev/sda1</span><br><span class="line">#    sleep 5</span><br><span class="line">#    service bt restart</span><br><span class="line">    ###########################</span><br><span class="line"># 文件内容</span><br><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">CONFIGFS=/sys/kernel/config/usb_gadget/g1</span><br><span class="line"></span><br><span class="line">setup() &#123;</span><br><span class="line"></span><br><span class="line">    # Remove All Gadgets If Gadget Exist</span><br><span class="line">    [ -d $CONFIGFS ] &amp;&amp; gc -c</span><br><span class="line">    ###########################</span><br><span class="line">    #    echo host&gt;/sys/kernel/debug/usb/ci_hdrc.0/role</span><br><span class="line">    #    sleep 5</span><br><span class="line">    #    mount /dev/sda2 /mnt/www</span><br><span class="line">    #    sleep 1</span><br><span class="line">    #    swapon /dev/sda1</span><br><span class="line">    #    sleep 5</span><br><span class="line">    #    service bt restart</span><br><span class="line">    ###########################</span><br><span class="line">    # Setiing Up Rndis</span><br><span class="line">    gc -a rndis</span><br><span class="line">    sleep 1</span><br><span class="line"></span><br><span class="line">    # Setting Up Adbd</span><br><span class="line">    gc -a ffs</span><br><span class="line">    mkdir -p /dev/usb-ffs/adb</span><br><span class="line">    </span><br><span class="line">    # in offical version of gc name will be ffs.x</span><br><span class="line">    mount -t functionfs adb /dev/usb-ffs/adb</span><br><span class="line">    </span><br><span class="line">    # Fire Up Adbd</span><br><span class="line">    adbd -D &amp;</span><br><span class="line">    # (hack) wait adbd setup</span><br><span class="line">    sleep 1</span><br><span class="line"></span><br><span class="line">    # Enable Gadget</span><br><span class="line">    gc -e</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reset() &#123;</span><br><span class="line">    echo &quot;Removing the USB gadget...&quot;</span><br><span class="line"></span><br><span class="line">    # Remove USB gadget</span><br><span class="line">    if [ -d $CONFIGFS ]; then</span><br><span class="line">        echo &quot;Removing gadget configuration...&quot;</span><br><span class="line">        gc -c</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    reset) reset ;;</span><br><span class="line">    setup) setup ;;</span><br><span class="line">    *) ;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Casa-OS安装命令："><a href="#Casa-OS安装命令：" class="headerlink" title="Casa OS安装命令："></a>Casa OS安装命令：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.icewhale.io/casaos.sh | bash</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.icewhale.io/casaos.sh | bash</span><br></pre></td></tr></table></figure><h3 id="Casa-OS卸载命令："><a href="#Casa-OS卸载命令：" class="headerlink" title="Casa OS卸载命令："></a>Casa OS卸载命令：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.icewhale.io/casaos-uninstall.sh | bash</span><br></pre></td></tr></table></figure><h3 id="1panel"><a href="#1panel" class="headerlink" title="1panel"></a>1panel</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debian 安装命令</span><br><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh</span><br></pre></td></tr></table></figure><h3 id="imei"><a href="#imei" class="headerlink" title="imei"></a>imei</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yu霖：862374050481924 860205055739738 其中一个</span><br><span class="line">恋指团:863320041675156</span><br></pre></td></tr></table></figure><h3 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h3><p>连接IP是10.42.0.1</p><p>账号root   密码1313144<br>压缩命令</p><pre><code>btrfs filesystem defragment -r -v -czstd /</code></pre><p>    </p><h3 id="锁频"><a href="#锁频" class="headerlink" title="锁频"></a>锁频</h3><p>查看modem</p><p>    mmcli -m 0</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>当当网数据爬取</title>
      <link href="/59496.html"/>
      <url>/59496.html</url>
      
        <content type="html"><![CDATA[<h3 id="当当网数据爬取"><a href="#当当网数据爬取" class="headerlink" title="当当网数据爬取"></a>当当网数据爬取</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from lxml import etree</span><br><span class="line">import urllib.request</span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">from multiprocessing.dummy import Pool as ThreadPool</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># 取所有分类</span><br><span class="line">url = &#x27;http://category.dangdang.com/?ref=www-0-C&#x27;</span><br><span class="line">def get_HTML(url):</span><br><span class="line">    res_info =requests.get(url) </span><br><span class="line">    return etree.HTML(res_info.text)</span><br><span class="line">tree=get_HTML(url)</span><br><span class="line"></span><br><span class="line">type_m=tree.xpath(&#x27;//div[@class=&quot;classify_books&quot;]&#x27;)</span><br><span class="line"></span><br><span class="line">type_c=&#123;&#125;</span><br><span class="line"></span><br><span class="line">for i in type_m:</span><br><span class="line">    tushu=i.xpath(&quot;./div/h3/a/text()&quot;)[0]#总分类name</span><br><span class="line">    tushu_type=i.xpath(&#x27;.//div[@class=&quot;classify_kind_name&quot;]/a/text()&#x27;)#总分类下的分类name </span><br><span class="line">    x=&#123;&#125;</span><br><span class="line">    y=0</span><br><span class="line">    for j in tushu_type:</span><br><span class="line">        y=y+1</span><br><span class="line">        tushu_type_typename=i.xpath(f&#x27;(./div/ul)[&#123;y&#125;]/li/a/text()&#x27;)#总分类下的分类下的分类name</span><br><span class="line">        tushu_type_typehref=i.xpath(f&#x27;(./div/ul)[&#123;y&#125;]/li/a/@href&#x27;)#总分类下的分类下的分类name</span><br><span class="line">        x[j]=[]</span><br><span class="line">        type_c[tushu]=x</span><br><span class="line">        for op in range(len(tushu_type_typename)):</span><br><span class="line">             type_c[tushu][j].append(&#123;&quot;title&quot;:tushu_type_typename[op],&quot;href&quot;:tushu_type_typehref[op]&#125;)</span><br><span class="line">             </span><br><span class="line">with open(&quot;type_c.json&quot;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as dayu:</span><br><span class="line">        print(&#x27;正在写入..&#x27;) </span><br><span class="line">        json.dump(type_c, dayu, indent=4, ensure_ascii=False)</span><br><span class="line">        print(&#x27;写完拉..&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ff=&#123;&#125; #重新排列json数据</span><br><span class="line">for i in type_c: # 大目录</span><br><span class="line">    for j in type_c[i]: #小目录</span><br><span class="line">        for index in range(len(type_c[i][j])):</span><br><span class="line">            pass</span><br><span class="line">            ff[type_c[i][j][index][&#x27;title&#x27;]]=&#123;type_c[i][j][index][&#x27;href&#x27;]:[]&#125; # s[i][j][index][&#x27;href&#x27;] 取地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 下载图片函数</span><br><span class="line">#  @param imageUrl 图片地址</span><br><span class="line">def imageD(imageUrl):</span><br><span class="line">    filename=imageUrl.replace(&quot;/&quot;,&quot;@&quot;)</span><br><span class="line">    byte=requests.get(&quot;http:&quot;+imageUrl).content</span><br><span class="line">    with open(&quot;image/&#123;&#125;&quot;.format(filename), &quot;wb&quot;) as f: # 文件写入</span><br><span class="line">        f.write(byte)</span><br><span class="line">    print(&quot;图片:&#123;&#125;爬取成功!&quot;.format(filename))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#多线程下载图片数据</span><br><span class="line"></span><br><span class="line">def thread_imageD(imageUrlList):</span><br><span class="line">    try:</span><br><span class="line">        # 开4个 worker，没有参数时默认是 cpu 的核心数</span><br><span class="line">        pool = ThreadPool()</span><br><span class="line">        results = pool.map(imageD, imageUrlList)</span><br><span class="line">        pool.close()</span><br><span class="line">        pool.join()</span><br><span class="line">        print(&quot;采集所有图片完成！&quot;)</span><br><span class="line">    except:</span><br><span class="line">        print(&quot;Error: unable to start thread&quot;)</span><br><span class="line"></span><br><span class="line">detail=&#123;&#125;</span><br><span class="line">tree_s=get_HTML(&quot;http://category.dangdang.com/cp01.01.13.00.00.00.html&quot;)</span><br><span class="line">zjd=tree_s.xpath(&#x27;//ul[@class=&quot;bigimg&quot;]/li&#x27;)</span><br><span class="line"></span><br><span class="line">p=0</span><br><span class="line">imageUrlList=[]</span><br><span class="line">for i in zjd:</span><br><span class="line">    p=p+1</span><br><span class="line">    if not i.xpath(&quot;.//img/@data-original&quot;): </span><br><span class="line">     imageurl=i.xpath(&quot;.//img/@src&quot;)[0]</span><br><span class="line">    else:</span><br><span class="line">        imageurl=i.xpath(&quot;.//img/@data-original&quot;)[0]</span><br><span class="line">    if not i.xpath(&#x27;./p[@class=&quot;detail&quot;]/text()&#x27;):</span><br><span class="line">        detail=None</span><br><span class="line">    else :</span><br><span class="line">        detail=i.xpath(&#x27;./p[@class=&quot;detail&quot;]/text()&#x27;)[0]</span><br><span class="line">    ff[&quot;影视写真青春文学&quot;][&quot;//category.dangdang.com/cp01.01.13.00.00.00.html&quot;].append(&#123;&quot;imageurl&quot;:imageurl,&quot;title&quot;:i.xpath(&#x27;./p[@class=&quot;name&quot;]/a/text()&#x27;)[0],&quot;price&quot;:i.xpath(&#x27;./p[@class=&quot;price&quot;]/span[@class=&quot;search_now_price&quot;]/text()&#x27;)[0],&quot;auth&quot;:i.xpath(&#x27;(./p[@class=&quot;search_book_author&quot;])[1]//a/text()&#x27;),&quot;detail&quot;:detail&#125;)</span><br><span class="line">    imageUrlList.append(imageurl)</span><br><span class="line">thread_imageD(imageUrlList)</span><br><span class="line">with open(&quot;book.json&quot;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as dayu:</span><br><span class="line">        print(&#x27;正在写入..&#x27;)</span><br><span class="line">        json.dump(ff, dayu, indent=4, ensure_ascii=False)</span><br><span class="line">        print(&#x27;写完拉..&#x27;)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 字符串替换</title>
      <link href="/61684.html"/>
      <url>/61684.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">txt = &quot;I like bananas&quot;</span><br><span class="line"> </span><br><span class="line">x = txt.replace(&quot;bananas&quot;, &quot;apples&quot;)</span><br><span class="line"> </span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python判断列表为空的三种方法</title>
      <link href="/28348.html"/>
      <url>/28348.html</url>
      
        <content type="html"><![CDATA[<p>python中判断列表为空</p><h3 id="方法1：len"><a href="#方法1：len" class="headerlink" title="方法1：len()"></a>方法1：len()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = []</span><br><span class="line">if len(list) == 0:</span><br><span class="line">    print(&#x27;list is empty&#x27;)</span><br></pre></td></tr></table></figure><h3 id="方法2：直接使用if判断"><a href="#方法2：直接使用if判断" class="headerlink" title="方法2：直接使用if判断"></a>方法2：直接使用if判断</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list = []</span><br><span class="line">if not list:</span><br><span class="line">    print(&#x27;list is empty&#x27;)</span><br><span class="line"></span><br><span class="line">直接使用list作为判断标准，则空列表相当于False</span><br></pre></td></tr></table></figure><h3 id="方法3：使用-进行判断"><a href="#方法3：使用-进行判断" class="headerlink" title="方法3：使用&#x3D;&#x3D;进行判断"></a>方法3：使用&#x3D;&#x3D;进行判断</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EmptyList = []</span><br><span class="line">list = []</span><br><span class="line">if list==EmptyList:</span><br><span class="line">    print(&#x27;list is empty&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据 HDFS的基本概念-Metadata</title>
      <link href="/24385.html"/>
      <url>/24385.html</url>
      
        <content type="html"><![CDATA[<p>元数据从类型上分可分三种信息形式，一是维护HDFS文件系统中文件和目录的信息，例如文件名、目录名、父目录信息、文件大小，创建时间、修改时间等；二是记录文件内客内容存储相关信息，例如文件分块情况、副本个致、每个副本所任的DataNode信息等；三是用来记录<br>HDFS中所有DataNlode的信息，用于DataNode管理。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>speedgithub</title>
      <link href="/26298.html"/>
      <url>/26298.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">&#x27;use strict&#x27;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * static files (404.html, sw.js, conf.js)</span><br><span class="line"> */</span><br><span class="line">const ASSET_URL = &#x27;https://github.com/dayuya&#x27;</span><br><span class="line">// 前缀，如果自定义路由为example.com/gh/*，将PREFIX改为 &#x27;/gh/&#x27;，注意，少一个杠都会错！</span><br><span class="line">const PREFIX = &#x27;/&#x27;</span><br><span class="line">// git使用cnpmjs镜像、分支文件使用jsDelivr镜像的开关，0为关闭，默认开启</span><br><span class="line">const Config = &#123;</span><br><span class="line">    jsdelivr: 1,</span><br><span class="line">    cnpmjs: 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** @type &#123;RequestInit&#125; */</span><br><span class="line">const PREFLIGHT_INIT = &#123;</span><br><span class="line">    status: 204,</span><br><span class="line">    headers: new Headers(&#123;</span><br><span class="line">        &#x27;access-control-allow-origin&#x27;: &#x27;*&#x27;,</span><br><span class="line">        &#x27;access-control-allow-methods&#x27;: &#x27;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#x27;,</span><br><span class="line">        &#x27;access-control-max-age&#x27;: &#x27;1728000&#x27;,</span><br><span class="line">    &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const exp1 = /^(?:https?:\/\/)?github\.com\/.+?\/.+?\/(?:releases|archive)\/.*$/i</span><br><span class="line">const exp2 = /^(?:https?:\/\/)?github\.com\/.+?\/.+?\/(?:blob|raw)\/.*$/i</span><br><span class="line">const exp3 = /^(?:https?:\/\/)?github\.com\/.+?\/.+?\/(?:info|git-).*$/i</span><br><span class="line">const exp4 = /^(?:https?:\/\/)?raw\.(?:githubusercontent|github)\.com\/.+?\/.+?\/.+?\/.+$/i</span><br><span class="line">const exp5 = /^(?:https?:\/\/)?gist\.(?:githubusercontent|github)\.com\/.+?\/.+?\/.+$/i</span><br><span class="line">const exp6 = /^(?:https?:\/\/)?github\.com\/.+?\/.+?\/tags.*$/i</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param &#123;any&#125; body</span><br><span class="line"> * @param &#123;number&#125; status</span><br><span class="line"> * @param &#123;Object&lt;string, string&gt;&#125; headers</span><br><span class="line"> */</span><br><span class="line">function makeRes(body, status = 200, headers = &#123;&#125;) &#123;</span><br><span class="line">    headers[&#x27;access-control-allow-origin&#x27;] = &#x27;*&#x27;</span><br><span class="line">    return new Response(body, &#123;status, headers&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param &#123;string&#125; urlStr</span><br><span class="line"> */</span><br><span class="line">function newUrl(urlStr) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        return new URL(urlStr)</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        return null</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addEventListener(&#x27;fetch&#x27;, e =&gt; &#123;</span><br><span class="line">    const ret = fetchHandler(e)</span><br><span class="line">        .catch(err =&gt; makeRes(&#x27;cfworker error:\n&#x27; + err.stack, 502))</span><br><span class="line">    e.respondWith(ret)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function checkUrl(u) &#123;</span><br><span class="line">    for (let i of [exp1, exp2, exp3, exp4, exp5, exp6 ]) &#123;</span><br><span class="line">        if (u.search(i) === 0) &#123;</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param &#123;FetchEvent&#125; e</span><br><span class="line"> */</span><br><span class="line">async function fetchHandler(e) &#123;</span><br><span class="line">    const req = e.request</span><br><span class="line">    const urlStr = req.url</span><br><span class="line">    const urlObj = new URL(urlStr)</span><br><span class="line">    let path = urlObj.searchParams.get(&#x27;q&#x27;)</span><br><span class="line">    if (path) &#123;</span><br><span class="line">        return Response.redirect(&#x27;https://&#x27; + urlObj.host + PREFIX + path, 301)</span><br><span class="line">    &#125;</span><br><span class="line">    // cfworker 会把路径中的 `//` 合并成 `/`</span><br><span class="line">    path = urlObj.href.substr(urlObj.origin.length + PREFIX.length).replace(/^https?:\/+/, &#x27;https://&#x27;)</span><br><span class="line">    if (path.search(exp1) === 0 || path.search(exp5) === 0 || path.search(exp6) === 0 || !Config.cnpmjs &amp;&amp; (path.search(exp3) === 0 || path.search(exp4) === 0)) &#123;</span><br><span class="line">        return httpHandler(req, path)</span><br><span class="line">    &#125; else if (path.search(exp2) === 0) &#123;</span><br><span class="line">        if (Config.jsdelivr) &#123;</span><br><span class="line">            const newUrl = path.replace(&#x27;/blob/&#x27;, &#x27;@&#x27;).replace(/^(?:https?:\/\/)?github\.com/, &#x27;https://cdn.jsdelivr.net/gh&#x27;)</span><br><span class="line">            return Response.redirect(newUrl, 302)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            path = path.replace(&#x27;/blob/&#x27;, &#x27;/raw/&#x27;)</span><br><span class="line">            return httpHandler(req, path)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if (path.search(exp3) === 0) &#123;</span><br><span class="line">        const newUrl = path.replace(/^(?:https?:\/\/)?github\.com/, &#x27;https://github.com.cnpmjs.org&#x27;)</span><br><span class="line">        return Response.redirect(newUrl, 302)</span><br><span class="line">    &#125; else if (path.search(exp4) === 0) &#123;</span><br><span class="line">        const newUrl = path.replace(/(?&lt;=com\/.+?\/.+?)\/(.+?\/)/, &#x27;@$1&#x27;).replace(/^(?:https?:\/\/)?raw\.(?:githubusercontent|github)\.com/, &#x27;https://cdn.jsdelivr.net/gh&#x27;)</span><br><span class="line">        return Response.redirect(newUrl, 302)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return fetch(ASSET_URL + path)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param &#123;Request&#125; req</span><br><span class="line"> * @param &#123;string&#125; pathname</span><br><span class="line"> */</span><br><span class="line">function httpHandler(req, pathname) &#123;</span><br><span class="line">    const reqHdrRaw = req.headers</span><br><span class="line"></span><br><span class="line">    // preflight</span><br><span class="line">    if (req.method === &#x27;OPTIONS&#x27; &amp;&amp;</span><br><span class="line">        reqHdrRaw.has(&#x27;access-control-request-headers&#x27;)</span><br><span class="line">    ) &#123;</span><br><span class="line">        return new Response(null, PREFLIGHT_INIT)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const reqHdrNew = new Headers(reqHdrRaw)</span><br><span class="line"></span><br><span class="line">    let urlStr = pathname</span><br><span class="line">    if (urlStr.startsWith(&#x27;github&#x27;)) &#123;</span><br><span class="line">        urlStr = &#x27;https://&#x27; + urlStr</span><br><span class="line">    &#125;</span><br><span class="line">    const urlObj = newUrl(urlStr)</span><br><span class="line"></span><br><span class="line">    /** @type &#123;RequestInit&#125; */</span><br><span class="line">    const reqInit = &#123;</span><br><span class="line">        method: req.method,</span><br><span class="line">        headers: reqHdrNew,</span><br><span class="line">        redirect: &#x27;manual&#x27;,</span><br><span class="line">        body: req.body</span><br><span class="line">    &#125;</span><br><span class="line">    return proxy(urlObj, reqInit)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * @param &#123;URL&#125; urlObj</span><br><span class="line"> * @param &#123;RequestInit&#125; reqInit</span><br><span class="line"> */</span><br><span class="line">async function proxy(urlObj, reqInit) &#123;</span><br><span class="line">    const res = await fetch(urlObj.href, reqInit)</span><br><span class="line">    const resHdrOld = res.headers</span><br><span class="line">    const resHdrNew = new Headers(resHdrOld)</span><br><span class="line"></span><br><span class="line">    const status = res.status</span><br><span class="line"></span><br><span class="line">    if (resHdrNew.has(&#x27;location&#x27;)) &#123;</span><br><span class="line">        let _location = resHdrNew.get(&#x27;location&#x27;)</span><br><span class="line">        if (checkUrl(_location))</span><br><span class="line">            resHdrNew.set(&#x27;location&#x27;, PREFIX + _location)</span><br><span class="line">        else &#123;</span><br><span class="line">            reqInit.redirect = &#x27;follow&#x27;</span><br><span class="line">            return proxy(newUrl(_location), reqInit)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    resHdrNew.set(&#x27;access-control-expose-headers&#x27;, &#x27;*&#x27;)</span><br><span class="line">    resHdrNew.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;)</span><br><span class="line"></span><br><span class="line">    resHdrNew.delete(&#x27;content-security-policy&#x27;)</span><br><span class="line">    resHdrNew.delete(&#x27;content-security-policy-report-only&#x27;)</span><br><span class="line">    resHdrNew.delete(&#x27;clear-site-data&#x27;)</span><br><span class="line"></span><br><span class="line">    return new Response(res.body, &#123;</span><br><span class="line">        status,</span><br><span class="line">        headers: resHdrNew,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlserver</title>
      <link href="/13.html"/>
      <url>/13.html</url>
      
        <content type="html"><![CDATA[<h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ol><li>创建数据库BookDB</li><li>创建数据表tBook（id、书名、作者、价格、出版社）</li><li>插入4行数据<br>001Java程序设计张三34.00清华大学出版社<br>002Java编程圣经李四66.00清华大学出版社<br>003Python入门王五54.00机械工业出版社<br>004Java面试宝典张三42.00人民邮电出版社</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>leancloud</title>
      <link href="/25485.html"/>
      <url>/25485.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>typecho 安装</title>
      <link href="/12495.html"/>
      <url>/12495.html</url>
      
        <content type="html"><![CDATA[<h2 id="typecho-window"><a href="#typecho-window" class="headerlink" title="typecho window"></a>typecho window</h2><p>外观使用</p><h2 id="typecho-linux"><a href="#typecho-linux" class="headerlink" title="typecho linux"></a>typecho linux</h2><h3 id="首先用下面的命令把数据源处理一下"><a href="#首先用下面的命令把数据源处理一下" class="headerlink" title="首先用下面的命令把数据源处理一下"></a>首先用下面的命令把数据源处理一下</h3><p>true &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mobian.list</p><h3 id="然后更新依赖和安装需要支持软件。"><a href="#然后更新依赖和安装需要支持软件。" class="headerlink" title="然后更新依赖和安装需要支持软件。"></a>然后更新依赖和安装需要支持软件。</h3><p>sudo apt-get update</p><p>apt-get install -y wget</p><p>apt-get install -y curl</p><p>apt-get install -y vim</p><h3 id="然后开始安装php和sql"><a href="#然后开始安装php和sql" class="headerlink" title="然后开始安装php和sql"></a>然后开始安装php和sql</h3><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><p>apt install -y nginx</p><h4 id="安装PHP及部分扩展"><a href="#安装PHP及部分扩展" class="headerlink" title="安装PHP及部分扩展"></a>安装PHP及部分扩展</h4><p>apt install -y php php-fpm php-mysqli php-mbstring</p><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p>apt install -y mariadb-server</p><h4 id="安装解压工具"><a href="#安装解压工具" class="headerlink" title="安装解压工具"></a>安装解压工具</h4><p>apt install -y zip</p><h4 id="然后输入下面的命令创建数据库，数据库名typecho，添加用户到MySQL数据库中，用户名typecho-密码typecho，登录主机为localhost-仅允许本机登录，无法远程登录"><a href="#然后输入下面的命令创建数据库，数据库名typecho，添加用户到MySQL数据库中，用户名typecho-密码typecho，登录主机为localhost-仅允许本机登录，无法远程登录" class="headerlink" title="然后输入下面的命令创建数据库，数据库名typecho，添加用户到MySQL数据库中，用户名typecho  密码typecho，登录主机为localhost(仅允许本机登录，无法远程登录)"></a>然后输入下面的命令创建数据库，数据库名typecho，添加用户到MySQL数据库中，用户名typecho  密码typecho，登录主机为localhost(仅允许本机登录，无法远程登录)</h4><p>mysql -u root -p密码 &lt;&lt;EOF</p><p>create database if  not exists typecho default charset utf8 collate utf8_general_ci;</p><p>create user ‘typecho‘@’localhost’ identified by ‘typecho’;</p><p>grant all on typecho.* to ‘typecho‘@’localhost’;</p><p>flush privileges;</p><p>EOF</p><h4 id="下载typecho"><a href="#下载typecho" class="headerlink" title="下载typecho"></a>下载typecho</h4><p>wget -O &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip <a href="https://github.com/typecho/typecho/releases/latest/download/typecho.zip">https://github.com/typecho/typecho/releases/latest/download/typecho.zip</a></p><h4 id="解压，解压完毕删除原压缩包-删除Nginx默认页面"><a href="#解压，解压完毕删除原压缩包-删除Nginx默认页面" class="headerlink" title="解压，解压完毕删除原压缩包 删除Nginx默认页面"></a>解压，解压完毕删除原压缩包 删除Nginx默认页面</h4><p>unzip -d &#x2F;var&#x2F;www&#x2F;html &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;typecho.zip</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html</p><p>rm &#x2F;var&#x2F;www&#x2F;html&#x2F;index.nginx-debian.html</p><h4 id="授予读写权限"><a href="#授予读写权限" class="headerlink" title="授予读写权限"></a>授予读写权限</h4><p>chmod -R 777 &#x2F;var&#x2F;www&#x2F;html</p><h4 id="备份Nginx配置"><a href="#备份Nginx配置" class="headerlink" title="备份Nginx配置"></a>备份Nginx配置</h4><p>cp -p &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default &#x2F;etc&#x2F;nginx&#x2F;sites-enabled_default.<code>date +%Y-%m-%d_%H-%M-%S</code>.bak</p><h4 id="还原Nginx配置"><a href="#还原Nginx配置" class="headerlink" title="还原Nginx配置"></a>还原Nginx配置</h4><p>wget -O &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default <a href="https://imtx-bucket.oss-cn-shenzhen.aliyuncs.com/linux/backup/typecho/default">https://imtx-bucket.oss-cn-shenzhen.aliyuncs.com/linux/backup/typecho/default</a></p><h4 id="重新加载配置文件，重启Nginx"><a href="#重新加载配置文件，重启Nginx" class="headerlink" title="重新加载配置文件，重启Nginx"></a>重新加载配置文件，重启Nginx</h4><p>nginx -s reload</p><p>systemctl restart nginx</p><p>等到它运行结束出现命令提示符就安装结束了，可以在浏览器中使用棒子的IP打开博客了。</p><p>tunnel: 91a4a296-32db-4e1e-a243-f6a3ff61af47<br>credentials-file: &#x2F;root&#x2F;.cloudflared&#x2F;91a4a296-32db-4e1e-a243-f6a3ff61af47.json<br>ingress:</p><ul><li>hostname: typecho.146334.xyz<br>service: <a href="http://127.0.0.1/">http://127.0.0.1</a></li><li>service: http_status:404</li></ul><p>cloudflared tunnel create cho<br>cloudflared tunnel route dns cho cho.146334.xyz</p><p>cloudflared service install</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透</title>
      <link href="/45608.html"/>
      <url>/45608.html</url>
      
        <content type="html"><![CDATA[<h2 id="cloudflare-windows-http"><a href="#cloudflare-windows-http" class="headerlink" title="cloudflare windows http"></a>cloudflare windows http</h2><h3 id="域名停靠"><a href="#域名停靠" class="headerlink" title="域名停靠"></a>域名停靠</h3><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><p>下载cloudflare.exe</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>运行<br>配置hostname</p><h2 id="zerotier"><a href="#zerotier" class="headerlink" title="zerotier"></a>zerotier</h2><p><a href="https://my.zerotier.com/network/abfd31bd4761ba43">https://my.zerotier.com/network/abfd31bd4761ba43</a></p><p>docker pull bltavares&#x2F;zerotier</p><p>docker run -d –device&#x3D;&#x2F;dev&#x2F;net&#x2F;tun <br>–name zerotier-one <br>–net&#x3D;host <br>–restart&#x3D;always <br>–cap-add&#x3D;NET_ADMIN <br>–cap-add&#x3D;SYS_ADMIN <br>-v &#x2F;var&#x2F;lib&#x2F;zerotier-one:&#x2F;var&#x2F;lib&#x2F;zerotier-one <br>bltavares&#x2F;zerotier:latest</p><p>docker exec zerotier-one zerotier-cli join [网络ID]</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vscode 远程访问</title>
      <link href="/2826.html"/>
      <url>/2826.html</url>
      
        <content type="html"><![CDATA[<h2 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://code.visualstudio.com/docs/remote/tunnels</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础</title>
      <link href="/61982.html"/>
      <url>/61982.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-初识Java"><a href="#第一章-初识Java" class="headerlink" title="第一章 初识Java"></a>第一章 初识Java</h2><ol><li>解什么是程序及Java</li><li>搭建Java运行环境</li><li>如何写Java代码</li><li>编写第一个Java程序</li><li>如何解决程序的错误</li><li>学会注释及输出控制符</li></ol><h2 id="第二章：变量、数据类型和运算符"><a href="#第二章：变量、数据类型和运算符" class="headerlink" title="第二章：变量、数据类型和运算符"></a>第二章：变量、数据类型和运算符</h2><ol><li>认识变量</li><li>如何声明变量</li><li>变量命名规则与数据类型</li><li>赋值运算符</li><li>算数运算符的应用 点击观看</li><li>认识%求余</li><li>数据类型的自动转换</li><li>数据类型的强制转换</li><li>数据的输入</li></ol><h2 id="第三章：条件选择结构"><a href="#第三章：条件选择结构" class="headerlink" title="第三章：条件选择结构"></a>第三章：条件选择结构</h2><ol><li><p>实例:数字交换</p></li><li><p>boolean数据类型与关系运算符</p></li><li><p>if条件语句的使用</p></li><li><p>逻辑运算符</p></li><li><p>运算符的优先级</p></li><li><p>else分支</p></li><li><p>多重if结构</p></li><li><p>if嵌套结构</p></li><li><p>switch多分支结构</p></li><li><p>实例:求偶数</p></li><li><p>实例:判读瑞年</p></li><li><p>取随机数</p></li><li><p>实例:猜拳游戏1</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">package B20221228;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author dayu</span><br><span class="line"> */</span><br><span class="line">public class 猜拳小游戏 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Random random = new Random();</span><br><span class="line">        System.out.println(&quot;游戏开始&quot;);</span><br><span class="line">        System.out.println(&quot;石头 剪刀 布 三种情况&quot;);</span><br><span class="line">        while (true)&#123;</span><br><span class="line">            int  result=random.nextInt( 4 )+1;</span><br><span class="line">            System.out.println(&quot;请输入 石头、剪刀、布、退出\n&quot;);</span><br><span class="line">            Scanner aa=new Scanner(System.in);</span><br><span class="line">            String gg=aa.next();</span><br><span class="line">            int a=0;</span><br><span class="line">            if(gg.equals(&quot;石头&quot;))&#123;</span><br><span class="line">                a=1;</span><br><span class="line">            &#125;</span><br><span class="line">            if(gg.equals(&quot;剪刀&quot;))&#123;</span><br><span class="line">                a=2;</span><br><span class="line">            &#125;</span><br><span class="line">            if(gg.equals(&quot;布&quot;))&#123;</span><br><span class="line">                a=3;</span><br><span class="line">            &#125;</span><br><span class="line">            if(gg.equals(&quot;退出&quot;))&#123;</span><br><span class="line">                System.out.println(&quot;good by&quot;);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            switch (a)&#123;</span><br><span class="line">                case 1:</span><br><span class="line">                    if(a==result)&#123;</span><br><span class="line">                        System.out.println(&quot;平局，你出的是石头，我出的也是石头&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==2)&#123;</span><br><span class="line">                        System.out.println(&quot;你赢了，你出的是石头，我出的是剪刀&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==3)&#123;</span><br><span class="line">                        System.out.println(&quot;你输了，你出的是石头，我出的是布&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                case 2:</span><br><span class="line">                    if(result==1)&#123;</span><br><span class="line">                        System.out.println(&quot;你输了，你出的是剪刀，我出的是石头&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==2)&#123;</span><br><span class="line">                        System.out.println(&quot;平局，你出的是剪刀，我出的是剪刀&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==3)&#123;</span><br><span class="line">                        System.out.println(&quot;你赢了，你出的是剪刀，我出的是布&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                case 3:</span><br><span class="line">                    if(result==1)&#123;</span><br><span class="line">                        System.out.println(&quot;你赢了，你出的是布，我出的也是石头&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==2)&#123;</span><br><span class="line">                        System.out.println(&quot;你输了，你出的是布，我出的是剪刀&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(result==3)&#123;</span><br><span class="line">                        System.out.println(&quot;平局，你出的是布，我出的是布&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                default:</span><br><span class="line">                    System.out.println(&quot;异常&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实例:猜拳游戏2</p></li><li><p>实例:猜拳游戏3</p></li></ol><h2 id="第四章：循环结构"><a href="#第四章：循环结构" class="headerlink" title="第四章：循环结构"></a>第四章：循环结构</h2><ol><li>章节项目预告</li><li>认识循环</li><li>算术运算符的分类</li><li>while循环语句</li><li>实例:累加求和</li><li>实例:求学员平均成绩</li><li>while循环小结</li><li>do-while循环结构</li><li>实例:猜数字游戏</li><li>安装MyEclipse </li><li>使用MyEclipse新建项目</li><li>使用MyEclipse创建java文件</li><li>程序调试 (1)</li><li>程序调试（2）</li><li>程序调试（3）</li><li>for循环结构</li><li>for循环结构练习</li><li>for循环常见问题及break语句</li><li>Continue语句</li><li>循环嵌套</li><li>实例:九九乘法表</li><li>实例:日历的制作（1）</li><li>实例:日历的制作（2）</li><li>实例:日历的制作（3）</li><li>实例:日历的制作（4）</li><li>实例:日历的制作（5）</li><li>实例:日历的制作（6）</li></ol><h2 id="第五章：数组"><a href="#第五章：数组" class="headerlink" title="第五章：数组"></a>第五章：数组</h2><ol><li>JVM内存分析</li><li>认识数组（1）</li><li>认识数组（2）</li><li>数组的存储原理</li><li>键盘录入赋值</li><li>数组的length属性</li><li>数组求最大值</li><li>数组的排序（1）</li><li>数组的排序（2）</li><li>数组复制算法</li><li>数组查找算法</li><li>数组插入算法</li><li>数组冒泡排序<br>概念：两两比较<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123; <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">9</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>选择排序原理</li><li>选择排序实例<br>概念：每个值依次比较<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123; <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">9</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt; arr[j]) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[j];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>插入排序<br>概念: 分有序和无序两部分<br>条件：找出无序其实索引并且记录<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123; <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">9</span> &#125;;</span><br><span class="line"><span class="type">int</span> startIndex=-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">        startIndex = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">    <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; arr[j] &lt; arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[j-<span class="number">1</span>];</span><br><span class="line">        arr[j-<span class="number">1</span>] = arr[j];</span><br><span class="line">        arr[j] = temp;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>递归排序<br>概念:自己调用自己<br>条件:需要一个出口，也就是方法返回值<figure class="highlight java"><figcaption><span>乘阶</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">         <span class="type">int</span> a=get(<span class="number">2</span>);</span><br><span class="line">         System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> number*get(number-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>快速排序<br>概念：找到基准数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123; <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">9</span> &#125;;</span><br><span class="line">        quickSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> i;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> j;</span><br><span class="line">        <span class="keyword">if</span>(start&gt;end)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">baseNumber</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        <span class="keyword">while</span> (start != end) &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (end &lt;= start || arr[end] &lt; baseNumber) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                end--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (end &lt;= start || arr[start] &gt; baseNumber) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                start++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[start];</span><br><span class="line">        arr[end] = temp;</span><br><span class="line">        quickSort(arr, i, start - <span class="number">1</span>);</span><br><span class="line">        quickSort(arr, start + <span class="number">1</span>, j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>多维数组（1）</li><li>多维数组（2）</li><li>学生成绩管理系统（1）</li><li>学生成绩管理系统（2）</li><li>学生成绩管理系统（3）</li><li>学生成绩管理系统（4）</li><li>学生成绩管理系统（5）</li><li>学生成绩管理系统（6）</li></ol><h2 id="第六章：类与对象"><a href="#第六章：类与对象" class="headerlink" title="第六章：类与对象"></a>第六章：类与对象</h2><h2 id="GUI-编程-JFrame"><a href="#GUI-编程-JFrame" class="headerlink" title="GUI 编程 JFrame"></a>GUI 编程 JFrame</h2>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
